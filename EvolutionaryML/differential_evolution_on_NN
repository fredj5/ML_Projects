{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "edeedc07",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/freddiejones/miniconda3/envs/tensorflow/lib/python3.10/site-packages/jax/_src/lib/__init__.py:32: UserWarning: JAX on Mac ARM machines is experimental and minimally tested. Please see https://github.com/google/jax/issues/5501 in the event of problems.\n",
      "  warnings.warn(\"JAX on Mac ARM machines is experimental and minimally tested. \"\n"
     ]
    }
   ],
   "source": [
    "# Packages and Imports\n",
    "\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# SciPy library contains framework for differential evolution algorithm\n",
    "from scipy.optimize import differential_evolution\n",
    "\n",
    "# Accuracy score and confusion matrix\n",
    "from sklearn import metrics\n",
    "from sklearn.metrics import accuracy_score, confusion_matrix \n",
    "\n",
    "# Nueural network packages\n",
    "import tensorflow\n",
    "from tensorflow.keras.optimizers.legacy import Adam \n",
    "from tensorflow.keras.models import Sequential \n",
    "from tensorflow.keras.layers import Dense"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "5487bbd0",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Load dataset\n",
    "wine_data = np.loadtxt('/Users/freddiejones/Desktop/EvolutionaryML/winequality-red.csv', delimiter=',', skiprows=1) # print(wine_data.shape)\n",
    "np.set_printoptions(formatter={'float': lambda x: '{0:0.2f}'.format(x)})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "e0f33f86",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[7.40 0.70 0.00 ... 0.56 9.40 0.00]\n",
      " [7.80 0.88 0.00 ... 0.68 9.80 0.00]\n",
      " [7.80 0.76 0.04 ... 0.65 9.80 0.00]\n",
      " ...\n",
      " [6.30 0.51 0.13 ... 0.75 11.00 1.00]\n",
      " [5.90 0.65 0.12 ... 0.71 10.20 0.00]\n",
      " [6.00 0.31 0.47 ... 0.66 11.00 1.00]]\n"
     ]
    }
   ],
   "source": [
    "# Binary classification transformation\n",
    "wine_data[wine_data[:, -1] < 5.5, -1] = 0 \n",
    "wine_data[wine_data[:, -1] >= 5.5, -1] = 1\n",
    "print(wine_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "05d4dba3",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Balance dataset\n",
    "np.random.shuffle(wine_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "687ef99c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Split into test and train\n",
    "thirty_percent = int(0.3 * len(wine_data[:, 0]))\n",
    "\n",
    "X_test = wine_data[:thirty_percent, :-1] \n",
    "Y_test = wine_data[:thirty_percent, -1]\n",
    "\n",
    "X_train = wine_data[thirty_percent:, 0:-1] \n",
    "Y_train = wine_data[thirty_percent:, -1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9ccd5e22",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Normalize wine data\n",
    "X_train = (X_train - np.mean(X_train, axis=0)) / np.std(X_train, axis=0)\n",
    "X_test = (X_test - np.mean(X_test, axis=0)) / np.std(X_test, axis=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c2db411b",
   "metadata": {},
   "outputs": [],
   "source": [
    "test_accuracy_scores = []\n",
    "train_accuracy_scores = []\n",
    "nn_model = None"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "4d160d19",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Fitness determined by binary accuracy score\n",
    "def fitness_func(x):\n",
    "    \n",
    "    # Globals\n",
    "    global test_accuracy_scores, train_accuracy_scores, nn_model\n",
    "    \n",
    "    # Make neural network model using Sequential keras model\n",
    "    # Define the architecture of neural network\n",
    "    nn_model = Sequential()\n",
    "    nn_model.add(Dense(units=x[0], input_dim = len(X_train[0, :]), activation = 'sigmoid')) # \n",
    "    nn_model.add(Dense(units=x[1], activation = 'sigmoid'))\n",
    "    nn_model.add(Dense(1, activation = 'sigmoid'))\n",
    "    \n",
    "    # Set loss to Binary Cross Entropy and compile the model with a backprop\n",
    "    loss = tensorflow.keras.losses.BinaryCrossentropy()\n",
    "    nn_model.compile(loss=loss, optimizer=Adam(), metrics=['accuracy'])\n",
    "    \n",
    "    # Fit over 10 generations\n",
    "    history = nn_model.fit(X_train, Y_train, epochs=10, validation_data=(X_test, Y_test))\n",
    "    \n",
    "    # Evaluate the fitness of the solution based on accuracy metric\n",
    "    accuracy = history.history['accuracy'][-1]\n",
    "    test_accuracy = history.history['val_accuracy'][-1]\n",
    "    train_accuracy_scores.append(accuracy)\n",
    "    test_accuracy_scores.append(test_accuracy)\n",
    "    \n",
    "    return accuracy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "52a984df",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Bounds were chosen using trial and error\n",
    "bounds = [(10, 100), (10, 100)]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4c78180e",
   "metadata": {},
   "source": [
    "Negative lower bounds often crashed the kernel in Jupyter notebook. (10, 100) makes the algorithm run for a while but has proven to produce the best classification accuracy from my fitness function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "32941e69",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Metal device set to: Apple M2\n",
      "Epoch 1/10\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-03-28 18:54:40.780496: W tensorflow/tsl/platform/profile_utils/cpu_utils.cc:128] Failed to get CPU frequency: 0 Hz\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "35/35 [==============================] - 1s 11ms/step - loss: 0.6766 - accuracy: 0.5580 - val_loss: 0.6598 - val_accuracy: 0.6555\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6440 - accuracy: 0.6527 - val_loss: 0.6270 - val_accuracy: 0.7077\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6077 - accuracy: 0.7080 - val_loss: 0.5970 - val_accuracy: 0.7015\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5746 - accuracy: 0.7152 - val_loss: 0.5634 - val_accuracy: 0.7390\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5513 - accuracy: 0.7268 - val_loss: 0.5496 - val_accuracy: 0.7349\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5406 - accuracy: 0.7295 - val_loss: 0.5491 - val_accuracy: 0.7182\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5321 - accuracy: 0.7339 - val_loss: 0.5258 - val_accuracy: 0.7578\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5297 - accuracy: 0.7339 - val_loss: 0.5250 - val_accuracy: 0.7537\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5284 - accuracy: 0.7348 - val_loss: 0.5294 - val_accuracy: 0.7537\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5265 - accuracy: 0.7304 - val_loss: 0.5466 - val_accuracy: 0.7307\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 9ms/step - loss: 0.6760 - accuracy: 0.5804 - val_loss: 0.6658 - val_accuracy: 0.6284\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6530 - accuracy: 0.6286 - val_loss: 0.6411 - val_accuracy: 0.6597\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6206 - accuracy: 0.6661 - val_loss: 0.6233 - val_accuracy: 0.6367\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5869 - accuracy: 0.7080 - val_loss: 0.5725 - val_accuracy: 0.7328\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5604 - accuracy: 0.7268 - val_loss: 0.5572 - val_accuracy: 0.7077\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5434 - accuracy: 0.7312 - val_loss: 0.5395 - val_accuracy: 0.7474\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5345 - accuracy: 0.7304 - val_loss: 0.5278 - val_accuracy: 0.7578\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5301 - accuracy: 0.7304 - val_loss: 0.5311 - val_accuracy: 0.7432\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5258 - accuracy: 0.7295 - val_loss: 0.5248 - val_accuracy: 0.7557\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5235 - accuracy: 0.7312 - val_loss: 0.5366 - val_accuracy: 0.7411\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 9ms/step - loss: 0.6807 - accuracy: 0.5509 - val_loss: 0.6866 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6697 - accuracy: 0.5652 - val_loss: 0.6708 - val_accuracy: 0.5282\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6579 - accuracy: 0.5973 - val_loss: 0.6537 - val_accuracy: 0.6534\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6404 - accuracy: 0.6438 - val_loss: 0.6357 - val_accuracy: 0.6764\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6187 - accuracy: 0.7161 - val_loss: 0.6127 - val_accuracy: 0.7056\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5971 - accuracy: 0.7214 - val_loss: 0.5902 - val_accuracy: 0.7244\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5761 - accuracy: 0.7348 - val_loss: 0.5721 - val_accuracy: 0.7349\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5586 - accuracy: 0.7393 - val_loss: 0.5567 - val_accuracy: 0.7370\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5464 - accuracy: 0.7375 - val_loss: 0.5449 - val_accuracy: 0.7411\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5376 - accuracy: 0.7357 - val_loss: 0.5360 - val_accuracy: 0.7432\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 9ms/step - loss: 0.6869 - accuracy: 0.5688 - val_loss: 0.6596 - val_accuracy: 0.6868\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6413 - accuracy: 0.6750 - val_loss: 0.6389 - val_accuracy: 0.5971\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6083 - accuracy: 0.6982 - val_loss: 0.5954 - val_accuracy: 0.7035\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5774 - accuracy: 0.7116 - val_loss: 0.5636 - val_accuracy: 0.7349\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5528 - accuracy: 0.7286 - val_loss: 0.5504 - val_accuracy: 0.7244\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5390 - accuracy: 0.7330 - val_loss: 0.5341 - val_accuracy: 0.7432\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5329 - accuracy: 0.7286 - val_loss: 0.5355 - val_accuracy: 0.7495\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5294 - accuracy: 0.7375 - val_loss: 0.5378 - val_accuracy: 0.7349\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5319 - accuracy: 0.7304 - val_loss: 0.5395 - val_accuracy: 0.7349\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5258 - accuracy: 0.7393 - val_loss: 0.5451 - val_accuracy: 0.7307\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 10ms/step - loss: 0.6845 - accuracy: 0.5277 - val_loss: 0.6878 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6606 - accuracy: 0.5848 - val_loss: 0.6510 - val_accuracy: 0.6931\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6302 - accuracy: 0.6982 - val_loss: 0.6297 - val_accuracy: 0.6430\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6004 - accuracy: 0.7116 - val_loss: 0.5926 - val_accuracy: 0.7056\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5695 - accuracy: 0.7143 - val_loss: 0.5578 - val_accuracy: 0.7370\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5483 - accuracy: 0.7268 - val_loss: 0.5467 - val_accuracy: 0.7516\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5363 - accuracy: 0.7348 - val_loss: 0.5348 - val_accuracy: 0.7495\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5318 - accuracy: 0.7330 - val_loss: 0.5388 - val_accuracy: 0.7370\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5274 - accuracy: 0.7384 - val_loss: 0.5289 - val_accuracy: 0.7516\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5246 - accuracy: 0.7411 - val_loss: 0.5286 - val_accuracy: 0.7537\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 9ms/step - loss: 0.7062 - accuracy: 0.4348 - val_loss: 0.6927 - val_accuracy: 0.5595\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6873 - accuracy: 0.5598 - val_loss: 0.6875 - val_accuracy: 0.5031\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6788 - accuracy: 0.5500 - val_loss: 0.6826 - val_accuracy: 0.4948\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6709 - accuracy: 0.5527 - val_loss: 0.6748 - val_accuracy: 0.5010\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6617 - accuracy: 0.5714 - val_loss: 0.6645 - val_accuracy: 0.5553\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6516 - accuracy: 0.6062 - val_loss: 0.6516 - val_accuracy: 0.6514\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6391 - accuracy: 0.6991 - val_loss: 0.6375 - val_accuracy: 0.6973\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6260 - accuracy: 0.7143 - val_loss: 0.6248 - val_accuracy: 0.7077\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6120 - accuracy: 0.7170 - val_loss: 0.6089 - val_accuracy: 0.7286\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5983 - accuracy: 0.7250 - val_loss: 0.5942 - val_accuracy: 0.7328\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 10ms/step - loss: 0.6815 - accuracy: 0.5813 - val_loss: 0.6816 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6451 - accuracy: 0.6304 - val_loss: 0.6340 - val_accuracy: 0.6472\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6056 - accuracy: 0.7009 - val_loss: 0.5881 - val_accuracy: 0.7265\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5704 - accuracy: 0.7161 - val_loss: 0.5564 - val_accuracy: 0.7182\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5496 - accuracy: 0.7196 - val_loss: 0.5394 - val_accuracy: 0.7474\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5361 - accuracy: 0.7304 - val_loss: 0.5489 - val_accuracy: 0.7286\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5292 - accuracy: 0.7348 - val_loss: 0.5294 - val_accuracy: 0.7474\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5303 - accuracy: 0.7304 - val_loss: 0.5227 - val_accuracy: 0.7620\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5275 - accuracy: 0.7295 - val_loss: 0.5210 - val_accuracy: 0.7620\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5276 - accuracy: 0.7241 - val_loss: 0.5248 - val_accuracy: 0.7537\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 9ms/step - loss: 0.7112 - accuracy: 0.5277 - val_loss: 0.6765 - val_accuracy: 0.4990\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6489 - accuracy: 0.6152 - val_loss: 0.6349 - val_accuracy: 0.7223\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6158 - accuracy: 0.6616 - val_loss: 0.5994 - val_accuracy: 0.6973\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5901 - accuracy: 0.6973 - val_loss: 0.5630 - val_accuracy: 0.7370\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5588 - accuracy: 0.7134 - val_loss: 0.5423 - val_accuracy: 0.7453\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5396 - accuracy: 0.7330 - val_loss: 0.5360 - val_accuracy: 0.7453\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5322 - accuracy: 0.7321 - val_loss: 0.5302 - val_accuracy: 0.7516\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5288 - accuracy: 0.7402 - val_loss: 0.5221 - val_accuracy: 0.7578\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5267 - accuracy: 0.7411 - val_loss: 0.5357 - val_accuracy: 0.7411\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5253 - accuracy: 0.7259 - val_loss: 0.5225 - val_accuracy: 0.7516\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 10ms/step - loss: 0.6803 - accuracy: 0.5455 - val_loss: 0.6661 - val_accuracy: 0.6681\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6476 - accuracy: 0.6732 - val_loss: 0.6335 - val_accuracy: 0.6868\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6099 - accuracy: 0.7000 - val_loss: 0.5891 - val_accuracy: 0.7328\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5750 - accuracy: 0.7134 - val_loss: 0.5579 - val_accuracy: 0.7453\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5513 - accuracy: 0.7339 - val_loss: 0.5371 - val_accuracy: 0.7516\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5369 - accuracy: 0.7268 - val_loss: 0.5344 - val_accuracy: 0.7474\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5314 - accuracy: 0.7268 - val_loss: 0.5287 - val_accuracy: 0.7474\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5288 - accuracy: 0.7286 - val_loss: 0.5271 - val_accuracy: 0.7557\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5256 - accuracy: 0.7321 - val_loss: 0.5222 - val_accuracy: 0.7578\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5260 - accuracy: 0.7393 - val_loss: 0.5199 - val_accuracy: 0.7620\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 11ms/step - loss: 0.7265 - accuracy: 0.5009 - val_loss: 0.7003 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6711 - accuracy: 0.5768 - val_loss: 0.6697 - val_accuracy: 0.5491\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6489 - accuracy: 0.6250 - val_loss: 0.6428 - val_accuracy: 0.6785\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6268 - accuracy: 0.6696 - val_loss: 0.6131 - val_accuracy: 0.7056\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5978 - accuracy: 0.6938 - val_loss: 0.5912 - val_accuracy: 0.7161\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5753 - accuracy: 0.7089 - val_loss: 0.5767 - val_accuracy: 0.7077\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5580 - accuracy: 0.7214 - val_loss: 0.5566 - val_accuracy: 0.7223\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5459 - accuracy: 0.7286 - val_loss: 0.5503 - val_accuracy: 0.7286\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5365 - accuracy: 0.7321 - val_loss: 0.5354 - val_accuracy: 0.7390\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5335 - accuracy: 0.7321 - val_loss: 0.5371 - val_accuracy: 0.7516\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 10ms/step - loss: 0.6858 - accuracy: 0.5366 - val_loss: 0.6863 - val_accuracy: 0.5031\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6650 - accuracy: 0.5679 - val_loss: 0.6608 - val_accuracy: 0.5992\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6409 - accuracy: 0.6661 - val_loss: 0.6372 - val_accuracy: 0.6326\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6123 - accuracy: 0.6902 - val_loss: 0.6026 - val_accuracy: 0.7035\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5821 - accuracy: 0.7259 - val_loss: 0.5718 - val_accuracy: 0.7349\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5601 - accuracy: 0.7241 - val_loss: 0.5578 - val_accuracy: 0.7307\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5437 - accuracy: 0.7295 - val_loss: 0.5393 - val_accuracy: 0.7474\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5351 - accuracy: 0.7259 - val_loss: 0.5427 - val_accuracy: 0.7370\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5321 - accuracy: 0.7277 - val_loss: 0.5309 - val_accuracy: 0.7537\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5276 - accuracy: 0.7339 - val_loss: 0.5228 - val_accuracy: 0.7557\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 10ms/step - loss: 0.6897 - accuracy: 0.5518 - val_loss: 0.6840 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6566 - accuracy: 0.6473 - val_loss: 0.6627 - val_accuracy: 0.5198\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6302 - accuracy: 0.6277 - val_loss: 0.6146 - val_accuracy: 0.7182\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5975 - accuracy: 0.7071 - val_loss: 0.6032 - val_accuracy: 0.6743\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5735 - accuracy: 0.7080 - val_loss: 0.5721 - val_accuracy: 0.7056\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5508 - accuracy: 0.7277 - val_loss: 0.5452 - val_accuracy: 0.7411\n",
      "Epoch 7/10\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5396 - accuracy: 0.7259 - val_loss: 0.5391 - val_accuracy: 0.7453\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5326 - accuracy: 0.7277 - val_loss: 0.5352 - val_accuracy: 0.7411\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5278 - accuracy: 0.7321 - val_loss: 0.5277 - val_accuracy: 0.7453\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5262 - accuracy: 0.7312 - val_loss: 0.5263 - val_accuracy: 0.7453\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 10ms/step - loss: 0.6897 - accuracy: 0.5518 - val_loss: 0.6922 - val_accuracy: 0.4990\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6774 - accuracy: 0.5491 - val_loss: 0.6812 - val_accuracy: 0.5031\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6658 - accuracy: 0.5518 - val_loss: 0.6681 - val_accuracy: 0.5136\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6523 - accuracy: 0.6000 - val_loss: 0.6513 - val_accuracy: 0.6033\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6362 - accuracy: 0.6455 - val_loss: 0.6348 - val_accuracy: 0.6451\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6175 - accuracy: 0.6884 - val_loss: 0.6133 - val_accuracy: 0.7098\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5997 - accuracy: 0.7232 - val_loss: 0.5976 - val_accuracy: 0.7098\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5811 - accuracy: 0.7259 - val_loss: 0.5800 - val_accuracy: 0.7453\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5660 - accuracy: 0.7312 - val_loss: 0.5623 - val_accuracy: 0.7474\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5540 - accuracy: 0.7241 - val_loss: 0.5495 - val_accuracy: 0.7474\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 10ms/step - loss: 0.7356 - accuracy: 0.5188 - val_loss: 0.6794 - val_accuracy: 0.5010\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6614 - accuracy: 0.6062 - val_loss: 0.6518 - val_accuracy: 0.6848\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6335 - accuracy: 0.7071 - val_loss: 0.6372 - val_accuracy: 0.6013\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6071 - accuracy: 0.6759 - val_loss: 0.5930 - val_accuracy: 0.7265\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5802 - accuracy: 0.7116 - val_loss: 0.5645 - val_accuracy: 0.7370\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5523 - accuracy: 0.7321 - val_loss: 0.5462 - val_accuracy: 0.7432\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5407 - accuracy: 0.7259 - val_loss: 0.5358 - val_accuracy: 0.7474\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5331 - accuracy: 0.7232 - val_loss: 0.5324 - val_accuracy: 0.7474\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5285 - accuracy: 0.7286 - val_loss: 0.5232 - val_accuracy: 0.7599\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5284 - accuracy: 0.7277 - val_loss: 0.5246 - val_accuracy: 0.7578\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 11ms/step - loss: 0.6875 - accuracy: 0.5661 - val_loss: 0.6837 - val_accuracy: 0.5031\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6700 - accuracy: 0.5518 - val_loss: 0.6702 - val_accuracy: 0.5177\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6502 - accuracy: 0.6732 - val_loss: 0.6472 - val_accuracy: 0.6242\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6243 - accuracy: 0.6920 - val_loss: 0.6204 - val_accuracy: 0.6722\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5979 - accuracy: 0.7089 - val_loss: 0.5936 - val_accuracy: 0.6931\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5727 - accuracy: 0.7205 - val_loss: 0.5666 - val_accuracy: 0.7390\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5551 - accuracy: 0.7259 - val_loss: 0.5514 - val_accuracy: 0.7453\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5428 - accuracy: 0.7330 - val_loss: 0.5403 - val_accuracy: 0.7432\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5351 - accuracy: 0.7304 - val_loss: 0.5368 - val_accuracy: 0.7432\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5299 - accuracy: 0.7304 - val_loss: 0.5331 - val_accuracy: 0.7474\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 11ms/step - loss: 0.6853 - accuracy: 0.5509 - val_loss: 0.6902 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6737 - accuracy: 0.5607 - val_loss: 0.6790 - val_accuracy: 0.4969\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6609 - accuracy: 0.5598 - val_loss: 0.6631 - val_accuracy: 0.5616\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6463 - accuracy: 0.6464 - val_loss: 0.6451 - val_accuracy: 0.6514\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6277 - accuracy: 0.7009 - val_loss: 0.6265 - val_accuracy: 0.6848\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6083 - accuracy: 0.7188 - val_loss: 0.6060 - val_accuracy: 0.7119\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5897 - accuracy: 0.7295 - val_loss: 0.5883 - val_accuracy: 0.7182\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5719 - accuracy: 0.7339 - val_loss: 0.5714 - val_accuracy: 0.7349\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5590 - accuracy: 0.7295 - val_loss: 0.5573 - val_accuracy: 0.7349\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5488 - accuracy: 0.7348 - val_loss: 0.5484 - val_accuracy: 0.7370\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 11ms/step - loss: 0.6763 - accuracy: 0.5777 - val_loss: 0.6742 - val_accuracy: 0.5010\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6452 - accuracy: 0.6518 - val_loss: 0.6363 - val_accuracy: 0.6660\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6098 - accuracy: 0.6902 - val_loss: 0.5933 - val_accuracy: 0.7349\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5773 - accuracy: 0.7098 - val_loss: 0.5615 - val_accuracy: 0.7453\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5526 - accuracy: 0.7232 - val_loss: 0.5459 - val_accuracy: 0.7390\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5407 - accuracy: 0.7241 - val_loss: 0.5377 - val_accuracy: 0.7432\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5325 - accuracy: 0.7357 - val_loss: 0.5323 - val_accuracy: 0.7411\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5286 - accuracy: 0.7259 - val_loss: 0.5325 - val_accuracy: 0.7453\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5276 - accuracy: 0.7330 - val_loss: 0.5342 - val_accuracy: 0.7453\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5254 - accuracy: 0.7339 - val_loss: 0.5209 - val_accuracy: 0.7599\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 11ms/step - loss: 0.6864 - accuracy: 0.5277 - val_loss: 0.6922 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6693 - accuracy: 0.5616 - val_loss: 0.6661 - val_accuracy: 0.5407\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6475 - accuracy: 0.5911 - val_loss: 0.6440 - val_accuracy: 0.6326\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6210 - accuracy: 0.6938 - val_loss: 0.6094 - val_accuracy: 0.7035\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5906 - accuracy: 0.7170 - val_loss: 0.5858 - val_accuracy: 0.7077\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5661 - accuracy: 0.7134 - val_loss: 0.5573 - val_accuracy: 0.7390\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5478 - accuracy: 0.7277 - val_loss: 0.5404 - val_accuracy: 0.7495\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5400 - accuracy: 0.7205 - val_loss: 0.5331 - val_accuracy: 0.7453\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5323 - accuracy: 0.7366 - val_loss: 0.5454 - val_accuracy: 0.7328\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5313 - accuracy: 0.7232 - val_loss: 0.5356 - val_accuracy: 0.7411\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 10ms/step - loss: 0.6867 - accuracy: 0.5893 - val_loss: 0.6773 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6518 - accuracy: 0.5920 - val_loss: 0.6368 - val_accuracy: 0.7265\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6187 - accuracy: 0.6938 - val_loss: 0.6014 - val_accuracy: 0.7265\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5803 - accuracy: 0.7241 - val_loss: 0.5689 - val_accuracy: 0.7307\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5533 - accuracy: 0.7250 - val_loss: 0.5486 - val_accuracy: 0.7411\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5400 - accuracy: 0.7241 - val_loss: 0.5321 - val_accuracy: 0.7516\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5349 - accuracy: 0.7241 - val_loss: 0.5276 - val_accuracy: 0.7599\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5316 - accuracy: 0.7277 - val_loss: 0.5302 - val_accuracy: 0.7495\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5268 - accuracy: 0.7268 - val_loss: 0.5240 - val_accuracy: 0.7557\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5235 - accuracy: 0.7286 - val_loss: 0.5356 - val_accuracy: 0.7453\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 11ms/step - loss: 0.6775 - accuracy: 0.5571 - val_loss: 0.6699 - val_accuracy: 0.5282\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6508 - accuracy: 0.6554 - val_loss: 0.6431 - val_accuracy: 0.6576\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6243 - accuracy: 0.6938 - val_loss: 0.6129 - val_accuracy: 0.7056\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5959 - accuracy: 0.7241 - val_loss: 0.5846 - val_accuracy: 0.7286\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5730 - accuracy: 0.7161 - val_loss: 0.5653 - val_accuracy: 0.7390\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5553 - accuracy: 0.7241 - val_loss: 0.5486 - val_accuracy: 0.7453\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5422 - accuracy: 0.7277 - val_loss: 0.5396 - val_accuracy: 0.7495\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5359 - accuracy: 0.7259 - val_loss: 0.5335 - val_accuracy: 0.7578\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5335 - accuracy: 0.7268 - val_loss: 0.5293 - val_accuracy: 0.7537\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5292 - accuracy: 0.7196 - val_loss: 0.5343 - val_accuracy: 0.7453\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 11ms/step - loss: 0.7119 - accuracy: 0.5759 - val_loss: 0.6735 - val_accuracy: 0.6159\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6621 - accuracy: 0.5973 - val_loss: 0.6576 - val_accuracy: 0.6096\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6430 - accuracy: 0.6777 - val_loss: 0.6426 - val_accuracy: 0.6180\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6224 - accuracy: 0.6893 - val_loss: 0.6135 - val_accuracy: 0.7119\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5978 - accuracy: 0.7196 - val_loss: 0.5936 - val_accuracy: 0.7119\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5771 - accuracy: 0.7205 - val_loss: 0.5754 - val_accuracy: 0.7203\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5593 - accuracy: 0.7152 - val_loss: 0.5572 - val_accuracy: 0.7370\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5457 - accuracy: 0.7250 - val_loss: 0.5482 - val_accuracy: 0.7411\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5377 - accuracy: 0.7295 - val_loss: 0.5357 - val_accuracy: 0.7411\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5327 - accuracy: 0.7321 - val_loss: 0.5377 - val_accuracy: 0.7432\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 11ms/step - loss: 0.7448 - accuracy: 0.4929 - val_loss: 0.6870 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6677 - accuracy: 0.5580 - val_loss: 0.6667 - val_accuracy: 0.5365\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6477 - accuracy: 0.6473 - val_loss: 0.6409 - val_accuracy: 0.6681\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6254 - accuracy: 0.7071 - val_loss: 0.6173 - val_accuracy: 0.6973\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6023 - accuracy: 0.7188 - val_loss: 0.5921 - val_accuracy: 0.7244\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5817 - accuracy: 0.7196 - val_loss: 0.5685 - val_accuracy: 0.7516\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5643 - accuracy: 0.7250 - val_loss: 0.5574 - val_accuracy: 0.7349\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5515 - accuracy: 0.7268 - val_loss: 0.5530 - val_accuracy: 0.7203\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5430 - accuracy: 0.7348 - val_loss: 0.5358 - val_accuracy: 0.7453\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5373 - accuracy: 0.7312 - val_loss: 0.5392 - val_accuracy: 0.7390\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 12ms/step - loss: 0.6891 - accuracy: 0.5366 - val_loss: 0.6809 - val_accuracy: 0.4990\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6499 - accuracy: 0.6500 - val_loss: 0.6410 - val_accuracy: 0.6430\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6209 - accuracy: 0.6884 - val_loss: 0.6096 - val_accuracy: 0.7015\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5892 - accuracy: 0.7170 - val_loss: 0.5786 - val_accuracy: 0.7223\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5665 - accuracy: 0.7277 - val_loss: 0.5601 - val_accuracy: 0.7098\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5487 - accuracy: 0.7241 - val_loss: 0.5467 - val_accuracy: 0.7349\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5417 - accuracy: 0.7259 - val_loss: 0.5407 - val_accuracy: 0.7411\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5336 - accuracy: 0.7339 - val_loss: 0.5344 - val_accuracy: 0.7495\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5292 - accuracy: 0.7366 - val_loss: 0.5228 - val_accuracy: 0.7537\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5266 - accuracy: 0.7339 - val_loss: 0.5332 - val_accuracy: 0.7432\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 11ms/step - loss: 0.6765 - accuracy: 0.5813 - val_loss: 0.6617 - val_accuracy: 0.6973\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6458 - accuracy: 0.6616 - val_loss: 0.6400 - val_accuracy: 0.6180\n",
      "Epoch 3/10\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6055 - accuracy: 0.6911 - val_loss: 0.5881 - val_accuracy: 0.7349\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5729 - accuracy: 0.7054 - val_loss: 0.5750 - val_accuracy: 0.7077\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5508 - accuracy: 0.7259 - val_loss: 0.5429 - val_accuracy: 0.7411\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5375 - accuracy: 0.7304 - val_loss: 0.5408 - val_accuracy: 0.7432\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5310 - accuracy: 0.7295 - val_loss: 0.5412 - val_accuracy: 0.7474\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5322 - accuracy: 0.7259 - val_loss: 0.5369 - val_accuracy: 0.7537\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5267 - accuracy: 0.7339 - val_loss: 0.5251 - val_accuracy: 0.7537\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5234 - accuracy: 0.7339 - val_loss: 0.5315 - val_accuracy: 0.7516\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 11ms/step - loss: 0.6749 - accuracy: 0.5589 - val_loss: 0.6665 - val_accuracy: 0.6326\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6519 - accuracy: 0.6143 - val_loss: 0.6428 - val_accuracy: 0.6555\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6247 - accuracy: 0.6929 - val_loss: 0.6212 - val_accuracy: 0.6555\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5944 - accuracy: 0.7089 - val_loss: 0.5778 - val_accuracy: 0.7453\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5661 - accuracy: 0.7295 - val_loss: 0.5593 - val_accuracy: 0.7453\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5492 - accuracy: 0.7277 - val_loss: 0.5399 - val_accuracy: 0.7578\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5375 - accuracy: 0.7304 - val_loss: 0.5356 - val_accuracy: 0.7537\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5308 - accuracy: 0.7295 - val_loss: 0.5282 - val_accuracy: 0.7516\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5270 - accuracy: 0.7295 - val_loss: 0.5257 - val_accuracy: 0.7516\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5269 - accuracy: 0.7330 - val_loss: 0.5368 - val_accuracy: 0.7432\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 16ms/step - loss: 0.8299 - accuracy: 0.4491 - val_loss: 0.7234 - val_accuracy: 0.5031\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.7162 - accuracy: 0.4527 - val_loss: 0.6804 - val_accuracy: 0.5428\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6762 - accuracy: 0.6268 - val_loss: 0.6713 - val_accuracy: 0.6180\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6625 - accuracy: 0.6446 - val_loss: 0.6655 - val_accuracy: 0.5929\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6535 - accuracy: 0.6402 - val_loss: 0.6584 - val_accuracy: 0.5971\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6447 - accuracy: 0.6527 - val_loss: 0.6496 - val_accuracy: 0.6117\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6345 - accuracy: 0.6723 - val_loss: 0.6375 - val_accuracy: 0.6681\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6237 - accuracy: 0.7009 - val_loss: 0.6234 - val_accuracy: 0.6889\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6119 - accuracy: 0.7054 - val_loss: 0.6129 - val_accuracy: 0.6848\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5987 - accuracy: 0.7277 - val_loss: 0.5973 - val_accuracy: 0.7035\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 12ms/step - loss: 0.6821 - accuracy: 0.5429 - val_loss: 0.6920 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6462 - accuracy: 0.6429 - val_loss: 0.6259 - val_accuracy: 0.6994\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6034 - accuracy: 0.7000 - val_loss: 0.5813 - val_accuracy: 0.7390\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5671 - accuracy: 0.7250 - val_loss: 0.5561 - val_accuracy: 0.7390\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5461 - accuracy: 0.7295 - val_loss: 0.5348 - val_accuracy: 0.7537\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5340 - accuracy: 0.7214 - val_loss: 0.5252 - val_accuracy: 0.7641\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5316 - accuracy: 0.7241 - val_loss: 0.5214 - val_accuracy: 0.7557\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5261 - accuracy: 0.7321 - val_loss: 0.5272 - val_accuracy: 0.7578\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5301 - accuracy: 0.7241 - val_loss: 0.5291 - val_accuracy: 0.7537\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5227 - accuracy: 0.7312 - val_loss: 0.5261 - val_accuracy: 0.7578\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 12ms/step - loss: 0.6898 - accuracy: 0.5652 - val_loss: 0.6696 - val_accuracy: 0.6409\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6509 - accuracy: 0.6098 - val_loss: 0.6405 - val_accuracy: 0.6576\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6160 - accuracy: 0.7000 - val_loss: 0.6012 - val_accuracy: 0.6994\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5766 - accuracy: 0.7223 - val_loss: 0.5617 - val_accuracy: 0.7411\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5501 - accuracy: 0.7312 - val_loss: 0.5479 - val_accuracy: 0.7390\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5377 - accuracy: 0.7357 - val_loss: 0.5425 - val_accuracy: 0.7349\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5318 - accuracy: 0.7339 - val_loss: 0.5333 - val_accuracy: 0.7453\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5303 - accuracy: 0.7330 - val_loss: 0.5226 - val_accuracy: 0.7557\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5273 - accuracy: 0.7277 - val_loss: 0.5337 - val_accuracy: 0.7370\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5242 - accuracy: 0.7268 - val_loss: 0.5404 - val_accuracy: 0.7328\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 13ms/step - loss: 0.6857 - accuracy: 0.5339 - val_loss: 0.6969 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6775 - accuracy: 0.5598 - val_loss: 0.6743 - val_accuracy: 0.5198\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6618 - accuracy: 0.5607 - val_loss: 0.6585 - val_accuracy: 0.5804\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6438 - accuracy: 0.6473 - val_loss: 0.6337 - val_accuracy: 0.6827\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6198 - accuracy: 0.6938 - val_loss: 0.6099 - val_accuracy: 0.6889\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5967 - accuracy: 0.7134 - val_loss: 0.5891 - val_accuracy: 0.7098\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 7ms/step - loss: 0.5750 - accuracy: 0.7161 - val_loss: 0.5667 - val_accuracy: 0.7286\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5588 - accuracy: 0.7214 - val_loss: 0.5474 - val_accuracy: 0.7474\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5483 - accuracy: 0.7250 - val_loss: 0.5464 - val_accuracy: 0.7349\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5394 - accuracy: 0.7286 - val_loss: 0.5357 - val_accuracy: 0.7453\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 12ms/step - loss: 0.6775 - accuracy: 0.5455 - val_loss: 0.6793 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6478 - accuracy: 0.6179 - val_loss: 0.6323 - val_accuracy: 0.7182\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6107 - accuracy: 0.7098 - val_loss: 0.5902 - val_accuracy: 0.7453\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5735 - accuracy: 0.7196 - val_loss: 0.5700 - val_accuracy: 0.7182\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5485 - accuracy: 0.7232 - val_loss: 0.5455 - val_accuracy: 0.7432\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5336 - accuracy: 0.7277 - val_loss: 0.5263 - val_accuracy: 0.7516\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5344 - accuracy: 0.7295 - val_loss: 0.5224 - val_accuracy: 0.7516\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5260 - accuracy: 0.7312 - val_loss: 0.5230 - val_accuracy: 0.7557\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5232 - accuracy: 0.7339 - val_loss: 0.5270 - val_accuracy: 0.7537\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5232 - accuracy: 0.7312 - val_loss: 0.5217 - val_accuracy: 0.7599\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 13ms/step - loss: 0.6910 - accuracy: 0.5446 - val_loss: 0.6740 - val_accuracy: 0.5115\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6538 - accuracy: 0.6000 - val_loss: 0.6402 - val_accuracy: 0.6994\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6205 - accuracy: 0.7107 - val_loss: 0.6204 - val_accuracy: 0.6618\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5897 - accuracy: 0.7107 - val_loss: 0.5792 - val_accuracy: 0.7161\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5621 - accuracy: 0.7286 - val_loss: 0.5480 - val_accuracy: 0.7474\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5459 - accuracy: 0.7250 - val_loss: 0.5373 - val_accuracy: 0.7495\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 7ms/step - loss: 0.5346 - accuracy: 0.7312 - val_loss: 0.5357 - val_accuracy: 0.7474\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5342 - accuracy: 0.7330 - val_loss: 0.5426 - val_accuracy: 0.7349\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5268 - accuracy: 0.7295 - val_loss: 0.5276 - val_accuracy: 0.7516\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5265 - accuracy: 0.7339 - val_loss: 0.5242 - val_accuracy: 0.7557\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 13ms/step - loss: 0.6791 - accuracy: 0.5518 - val_loss: 0.6809 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6551 - accuracy: 0.5786 - val_loss: 0.6461 - val_accuracy: 0.6785\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6277 - accuracy: 0.7009 - val_loss: 0.6162 - val_accuracy: 0.6973\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5973 - accuracy: 0.7063 - val_loss: 0.5880 - val_accuracy: 0.7015\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5698 - accuracy: 0.7188 - val_loss: 0.5651 - val_accuracy: 0.7223\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5526 - accuracy: 0.7241 - val_loss: 0.5547 - val_accuracy: 0.7098\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5414 - accuracy: 0.7286 - val_loss: 0.5338 - val_accuracy: 0.7578\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5348 - accuracy: 0.7312 - val_loss: 0.5296 - val_accuracy: 0.7474\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5298 - accuracy: 0.7312 - val_loss: 0.5314 - val_accuracy: 0.7516\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5284 - accuracy: 0.7330 - val_loss: 0.5288 - val_accuracy: 0.7537\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 12ms/step - loss: 0.7126 - accuracy: 0.4982 - val_loss: 0.6830 - val_accuracy: 0.5010\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6588 - accuracy: 0.6509 - val_loss: 0.6515 - val_accuracy: 0.6242\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6328 - accuracy: 0.6670 - val_loss: 0.6221 - val_accuracy: 0.6910\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6039 - accuracy: 0.7134 - val_loss: 0.6059 - val_accuracy: 0.6660\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5782 - accuracy: 0.7232 - val_loss: 0.5654 - val_accuracy: 0.7349\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5552 - accuracy: 0.7286 - val_loss: 0.5436 - val_accuracy: 0.7537\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5451 - accuracy: 0.7196 - val_loss: 0.5364 - val_accuracy: 0.7557\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5345 - accuracy: 0.7312 - val_loss: 0.5365 - val_accuracy: 0.7349\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5300 - accuracy: 0.7330 - val_loss: 0.5266 - val_accuracy: 0.7537\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5266 - accuracy: 0.7339 - val_loss: 0.5283 - val_accuracy: 0.7432\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 13ms/step - loss: 0.6727 - accuracy: 0.6232 - val_loss: 0.6664 - val_accuracy: 0.5553\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6456 - accuracy: 0.6295 - val_loss: 0.6393 - val_accuracy: 0.6827\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6172 - accuracy: 0.7089 - val_loss: 0.6058 - val_accuracy: 0.7119\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5873 - accuracy: 0.7116 - val_loss: 0.5856 - val_accuracy: 0.7035\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5632 - accuracy: 0.7268 - val_loss: 0.5516 - val_accuracy: 0.7432\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5460 - accuracy: 0.7304 - val_loss: 0.5526 - val_accuracy: 0.7286\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5387 - accuracy: 0.7232 - val_loss: 0.5392 - val_accuracy: 0.7390\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5311 - accuracy: 0.7304 - val_loss: 0.5316 - val_accuracy: 0.7474\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5283 - accuracy: 0.7330 - val_loss: 0.5248 - val_accuracy: 0.7537\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5264 - accuracy: 0.7286 - val_loss: 0.5484 - val_accuracy: 0.7307\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 12ms/step - loss: 0.6868 - accuracy: 0.5500 - val_loss: 0.6808 - val_accuracy: 0.5157\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6658 - accuracy: 0.5875 - val_loss: 0.6587 - val_accuracy: 0.5846\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6384 - accuracy: 0.6527 - val_loss: 0.6325 - val_accuracy: 0.6576\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6075 - accuracy: 0.6964 - val_loss: 0.5972 - val_accuracy: 0.7056\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5791 - accuracy: 0.7080 - val_loss: 0.5740 - val_accuracy: 0.7119\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5572 - accuracy: 0.7161 - val_loss: 0.5559 - val_accuracy: 0.7244\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5442 - accuracy: 0.7143 - val_loss: 0.5418 - val_accuracy: 0.7411\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5371 - accuracy: 0.7277 - val_loss: 0.5404 - val_accuracy: 0.7453\n",
      "Epoch 9/10\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5322 - accuracy: 0.7250 - val_loss: 0.5327 - val_accuracy: 0.7474\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5294 - accuracy: 0.7205 - val_loss: 0.5283 - val_accuracy: 0.7516\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 13ms/step - loss: 0.6955 - accuracy: 0.5125 - val_loss: 0.6880 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6712 - accuracy: 0.5509 - val_loss: 0.6723 - val_accuracy: 0.5261\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6576 - accuracy: 0.6313 - val_loss: 0.6590 - val_accuracy: 0.5699\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6429 - accuracy: 0.6179 - val_loss: 0.6391 - val_accuracy: 0.6764\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6248 - accuracy: 0.7205 - val_loss: 0.6223 - val_accuracy: 0.6848\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6065 - accuracy: 0.7107 - val_loss: 0.6021 - val_accuracy: 0.7056\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5877 - accuracy: 0.7188 - val_loss: 0.5819 - val_accuracy: 0.7328\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5715 - accuracy: 0.7223 - val_loss: 0.5685 - val_accuracy: 0.7390\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5575 - accuracy: 0.7312 - val_loss: 0.5558 - val_accuracy: 0.7390\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5460 - accuracy: 0.7348 - val_loss: 0.5460 - val_accuracy: 0.7390\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 13ms/step - loss: 0.6815 - accuracy: 0.5509 - val_loss: 0.6824 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6562 - accuracy: 0.6170 - val_loss: 0.6532 - val_accuracy: 0.5825\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6258 - accuracy: 0.7000 - val_loss: 0.6189 - val_accuracy: 0.6931\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5922 - accuracy: 0.7214 - val_loss: 0.5932 - val_accuracy: 0.6952\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5645 - accuracy: 0.7268 - val_loss: 0.5605 - val_accuracy: 0.7411\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5449 - accuracy: 0.7259 - val_loss: 0.5411 - val_accuracy: 0.7370\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5336 - accuracy: 0.7348 - val_loss: 0.5368 - val_accuracy: 0.7453\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5269 - accuracy: 0.7366 - val_loss: 0.5248 - val_accuracy: 0.7599\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5267 - accuracy: 0.7384 - val_loss: 0.5369 - val_accuracy: 0.7411\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5244 - accuracy: 0.7312 - val_loss: 0.5447 - val_accuracy: 0.7390\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 13ms/step - loss: 0.6929 - accuracy: 0.5625 - val_loss: 0.6845 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6648 - accuracy: 0.5670 - val_loss: 0.6586 - val_accuracy: 0.6263\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6378 - accuracy: 0.6661 - val_loss: 0.6331 - val_accuracy: 0.6534\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6069 - accuracy: 0.7232 - val_loss: 0.5996 - val_accuracy: 0.7098\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5792 - accuracy: 0.7214 - val_loss: 0.5685 - val_accuracy: 0.7474\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5566 - accuracy: 0.7223 - val_loss: 0.5489 - val_accuracy: 0.7474\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5418 - accuracy: 0.7277 - val_loss: 0.5475 - val_accuracy: 0.7370\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5332 - accuracy: 0.7304 - val_loss: 0.5301 - val_accuracy: 0.7578\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5314 - accuracy: 0.7259 - val_loss: 0.5297 - val_accuracy: 0.7474\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5281 - accuracy: 0.7295 - val_loss: 0.5301 - val_accuracy: 0.7537\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 13ms/step - loss: 0.6817 - accuracy: 0.5375 - val_loss: 0.6757 - val_accuracy: 0.4990\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 7ms/step - loss: 0.6546 - accuracy: 0.5946 - val_loss: 0.6489 - val_accuracy: 0.6326\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6287 - accuracy: 0.6857 - val_loss: 0.6199 - val_accuracy: 0.6889\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6024 - accuracy: 0.7018 - val_loss: 0.6016 - val_accuracy: 0.6806\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5800 - accuracy: 0.7063 - val_loss: 0.5712 - val_accuracy: 0.7223\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5612 - accuracy: 0.7286 - val_loss: 0.5559 - val_accuracy: 0.7328\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5487 - accuracy: 0.7250 - val_loss: 0.5497 - val_accuracy: 0.7390\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5427 - accuracy: 0.7250 - val_loss: 0.5491 - val_accuracy: 0.7307\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5352 - accuracy: 0.7339 - val_loss: 0.5319 - val_accuracy: 0.7474\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5324 - accuracy: 0.7339 - val_loss: 0.5376 - val_accuracy: 0.7453\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 13ms/step - loss: 0.6909 - accuracy: 0.5437 - val_loss: 0.7055 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6668 - accuracy: 0.5875 - val_loss: 0.6618 - val_accuracy: 0.6367\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6469 - accuracy: 0.6509 - val_loss: 0.6430 - val_accuracy: 0.6367\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6195 - accuracy: 0.6893 - val_loss: 0.6107 - val_accuracy: 0.6910\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5943 - accuracy: 0.7063 - val_loss: 0.5876 - val_accuracy: 0.6973\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5705 - accuracy: 0.7232 - val_loss: 0.5627 - val_accuracy: 0.7328\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5536 - accuracy: 0.7232 - val_loss: 0.5530 - val_accuracy: 0.7286\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5428 - accuracy: 0.7223 - val_loss: 0.5404 - val_accuracy: 0.7390\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5362 - accuracy: 0.7366 - val_loss: 0.5352 - val_accuracy: 0.7432\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5318 - accuracy: 0.7295 - val_loss: 0.5324 - val_accuracy: 0.7432\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 12ms/step - loss: 0.6980 - accuracy: 0.5339 - val_loss: 0.6927 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6776 - accuracy: 0.5643 - val_loss: 0.6732 - val_accuracy: 0.6555\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6590 - accuracy: 0.6000 - val_loss: 0.6588 - val_accuracy: 0.5887\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6364 - accuracy: 0.6705 - val_loss: 0.6286 - val_accuracy: 0.6910\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6077 - accuracy: 0.7027 - val_loss: 0.6056 - val_accuracy: 0.6889\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5817 - accuracy: 0.7063 - val_loss: 0.5751 - val_accuracy: 0.7265\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5594 - accuracy: 0.7125 - val_loss: 0.5518 - val_accuracy: 0.7432\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5445 - accuracy: 0.7179 - val_loss: 0.5466 - val_accuracy: 0.7349\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5343 - accuracy: 0.7259 - val_loss: 0.5334 - val_accuracy: 0.7411\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5290 - accuracy: 0.7277 - val_loss: 0.5439 - val_accuracy: 0.7432\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 13ms/step - loss: 0.6900 - accuracy: 0.5304 - val_loss: 0.6814 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6580 - accuracy: 0.5821 - val_loss: 0.6547 - val_accuracy: 0.6534\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6375 - accuracy: 0.7063 - val_loss: 0.6335 - val_accuracy: 0.6639\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6156 - accuracy: 0.7027 - val_loss: 0.6110 - val_accuracy: 0.6910\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5944 - accuracy: 0.7277 - val_loss: 0.5888 - val_accuracy: 0.7161\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 7ms/step - loss: 0.5756 - accuracy: 0.7205 - val_loss: 0.5671 - val_accuracy: 0.7453\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5599 - accuracy: 0.7295 - val_loss: 0.5576 - val_accuracy: 0.7307\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5491 - accuracy: 0.7321 - val_loss: 0.5472 - val_accuracy: 0.7390\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5414 - accuracy: 0.7312 - val_loss: 0.5417 - val_accuracy: 0.7370\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5368 - accuracy: 0.7384 - val_loss: 0.5329 - val_accuracy: 0.7537\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 13ms/step - loss: 0.6859 - accuracy: 0.5500 - val_loss: 0.6780 - val_accuracy: 0.5010\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6557 - accuracy: 0.6205 - val_loss: 0.6459 - val_accuracy: 0.6555\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6232 - accuracy: 0.6795 - val_loss: 0.6063 - val_accuracy: 0.7411\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5893 - accuracy: 0.7196 - val_loss: 0.5777 - val_accuracy: 0.7328\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5611 - accuracy: 0.7268 - val_loss: 0.5548 - val_accuracy: 0.7390\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5444 - accuracy: 0.7259 - val_loss: 0.5459 - val_accuracy: 0.7370\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5348 - accuracy: 0.7348 - val_loss: 0.5272 - val_accuracy: 0.7662\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5327 - accuracy: 0.7321 - val_loss: 0.5284 - val_accuracy: 0.7453\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5284 - accuracy: 0.7250 - val_loss: 0.5220 - val_accuracy: 0.7662\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5249 - accuracy: 0.7366 - val_loss: 0.5240 - val_accuracy: 0.7557\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.7558 - accuracy: 0.4920 - val_loss: 0.6933 - val_accuracy: 0.4990\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6731 - accuracy: 0.5616 - val_loss: 0.6692 - val_accuracy: 0.5846\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6541 - accuracy: 0.6170 - val_loss: 0.6503 - val_accuracy: 0.6409\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6337 - accuracy: 0.6723 - val_loss: 0.6289 - val_accuracy: 0.6868\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6120 - accuracy: 0.7045 - val_loss: 0.6084 - val_accuracy: 0.6848\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5904 - accuracy: 0.7161 - val_loss: 0.5841 - val_accuracy: 0.7223\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5704 - accuracy: 0.7259 - val_loss: 0.5656 - val_accuracy: 0.7244\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5550 - accuracy: 0.7241 - val_loss: 0.5522 - val_accuracy: 0.7370\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5453 - accuracy: 0.7259 - val_loss: 0.5416 - val_accuracy: 0.7432\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5373 - accuracy: 0.7339 - val_loss: 0.5413 - val_accuracy: 0.7432\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 13ms/step - loss: 0.6949 - accuracy: 0.5375 - val_loss: 0.6920 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6651 - accuracy: 0.5536 - val_loss: 0.6646 - val_accuracy: 0.5491\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6476 - accuracy: 0.6670 - val_loss: 0.6457 - val_accuracy: 0.6117\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6268 - accuracy: 0.6598 - val_loss: 0.6218 - val_accuracy: 0.6889\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6037 - accuracy: 0.7196 - val_loss: 0.5967 - val_accuracy: 0.7244\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5816 - accuracy: 0.7223 - val_loss: 0.5769 - val_accuracy: 0.7349\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5634 - accuracy: 0.7295 - val_loss: 0.5597 - val_accuracy: 0.7390\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5484 - accuracy: 0.7304 - val_loss: 0.5454 - val_accuracy: 0.7432\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5392 - accuracy: 0.7304 - val_loss: 0.5467 - val_accuracy: 0.7390\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5341 - accuracy: 0.7339 - val_loss: 0.5346 - val_accuracy: 0.7516\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 13ms/step - loss: 0.6828 - accuracy: 0.5393 - val_loss: 0.6849 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6677 - accuracy: 0.6080 - val_loss: 0.6772 - val_accuracy: 0.4969\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6459 - accuracy: 0.6348 - val_loss: 0.6407 - val_accuracy: 0.6514\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6195 - accuracy: 0.6795 - val_loss: 0.6081 - val_accuracy: 0.7328\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5934 - accuracy: 0.7098 - val_loss: 0.5882 - val_accuracy: 0.7119\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5701 - accuracy: 0.7179 - val_loss: 0.5655 - val_accuracy: 0.7349\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5527 - accuracy: 0.7196 - val_loss: 0.5485 - val_accuracy: 0.7349\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5426 - accuracy: 0.7179 - val_loss: 0.5392 - val_accuracy: 0.7474\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5351 - accuracy: 0.7250 - val_loss: 0.5375 - val_accuracy: 0.7453\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5310 - accuracy: 0.7286 - val_loss: 0.5410 - val_accuracy: 0.7370\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.6572 - accuracy: 0.5946 - val_loss: 0.6536 - val_accuracy: 0.5825\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6259 - accuracy: 0.6616 - val_loss: 0.6132 - val_accuracy: 0.7119\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5972 - accuracy: 0.6991 - val_loss: 0.5845 - val_accuracy: 0.7223\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5692 - accuracy: 0.7205 - val_loss: 0.5574 - val_accuracy: 0.7370\n",
      "Epoch 5/10\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "35/35 [==============================] - 0s 7ms/step - loss: 0.5521 - accuracy: 0.7214 - val_loss: 0.5496 - val_accuracy: 0.7390\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5401 - accuracy: 0.7268 - val_loss: 0.5462 - val_accuracy: 0.7370\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5322 - accuracy: 0.7286 - val_loss: 0.5317 - val_accuracy: 0.7453\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5285 - accuracy: 0.7295 - val_loss: 0.5370 - val_accuracy: 0.7411\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5270 - accuracy: 0.7304 - val_loss: 0.5272 - val_accuracy: 0.7495\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5248 - accuracy: 0.7375 - val_loss: 0.5248 - val_accuracy: 0.7578\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.6751 - accuracy: 0.5777 - val_loss: 0.6722 - val_accuracy: 0.5031\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6414 - accuracy: 0.6518 - val_loss: 0.6357 - val_accuracy: 0.6284\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6020 - accuracy: 0.7116 - val_loss: 0.5907 - val_accuracy: 0.7056\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5686 - accuracy: 0.7116 - val_loss: 0.5566 - val_accuracy: 0.7370\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5459 - accuracy: 0.7214 - val_loss: 0.5458 - val_accuracy: 0.7370\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5343 - accuracy: 0.7286 - val_loss: 0.5288 - val_accuracy: 0.7474\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5296 - accuracy: 0.7330 - val_loss: 0.5226 - val_accuracy: 0.7641\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5280 - accuracy: 0.7366 - val_loss: 0.5241 - val_accuracy: 0.7516\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5232 - accuracy: 0.7429 - val_loss: 0.5327 - val_accuracy: 0.7474\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5251 - accuracy: 0.7339 - val_loss: 0.5387 - val_accuracy: 0.7370\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.6840 - accuracy: 0.5527 - val_loss: 0.6789 - val_accuracy: 0.5094\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6635 - accuracy: 0.5598 - val_loss: 0.6613 - val_accuracy: 0.5407\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6408 - accuracy: 0.6571 - val_loss: 0.6337 - val_accuracy: 0.6889\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6143 - accuracy: 0.7071 - val_loss: 0.6076 - val_accuracy: 0.6994\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5880 - accuracy: 0.7232 - val_loss: 0.5826 - val_accuracy: 0.7140\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5657 - accuracy: 0.7295 - val_loss: 0.5605 - val_accuracy: 0.7370\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5508 - accuracy: 0.7241 - val_loss: 0.5490 - val_accuracy: 0.7432\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5410 - accuracy: 0.7259 - val_loss: 0.5403 - val_accuracy: 0.7474\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5360 - accuracy: 0.7348 - val_loss: 0.5334 - val_accuracy: 0.7432\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5308 - accuracy: 0.7268 - val_loss: 0.5329 - val_accuracy: 0.7516\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.7364 - accuracy: 0.5000 - val_loss: 0.6906 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6581 - accuracy: 0.5705 - val_loss: 0.6505 - val_accuracy: 0.6514\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6338 - accuracy: 0.6973 - val_loss: 0.6317 - val_accuracy: 0.6409\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 7ms/step - loss: 0.6044 - accuracy: 0.6964 - val_loss: 0.5913 - val_accuracy: 0.7370\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5805 - accuracy: 0.7161 - val_loss: 0.5665 - val_accuracy: 0.7432\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5586 - accuracy: 0.7330 - val_loss: 0.5481 - val_accuracy: 0.7453\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5439 - accuracy: 0.7268 - val_loss: 0.5444 - val_accuracy: 0.7390\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5358 - accuracy: 0.7312 - val_loss: 0.5335 - val_accuracy: 0.7474\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5311 - accuracy: 0.7339 - val_loss: 0.5296 - val_accuracy: 0.7453\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5292 - accuracy: 0.7286 - val_loss: 0.5273 - val_accuracy: 0.7537\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 15ms/step - loss: 0.6967 - accuracy: 0.5973 - val_loss: 0.6667 - val_accuracy: 0.6994\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6540 - accuracy: 0.6241 - val_loss: 0.6462 - val_accuracy: 0.6409\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6244 - accuracy: 0.6759 - val_loss: 0.6095 - val_accuracy: 0.7328\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5941 - accuracy: 0.7134 - val_loss: 0.5865 - val_accuracy: 0.7161\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5669 - accuracy: 0.7295 - val_loss: 0.5617 - val_accuracy: 0.7307\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5499 - accuracy: 0.7205 - val_loss: 0.5414 - val_accuracy: 0.7537\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5390 - accuracy: 0.7223 - val_loss: 0.5376 - val_accuracy: 0.7453\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5328 - accuracy: 0.7241 - val_loss: 0.5333 - val_accuracy: 0.7432\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5308 - accuracy: 0.7357 - val_loss: 0.5237 - val_accuracy: 0.7641\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5273 - accuracy: 0.7250 - val_loss: 0.5262 - val_accuracy: 0.7537\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 15ms/step - loss: 0.6893 - accuracy: 0.5312 - val_loss: 0.6942 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6692 - accuracy: 0.5607 - val_loss: 0.6645 - val_accuracy: 0.5407\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6454 - accuracy: 0.6125 - val_loss: 0.6402 - val_accuracy: 0.6221\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6149 - accuracy: 0.7080 - val_loss: 0.6023 - val_accuracy: 0.7140\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5845 - accuracy: 0.7241 - val_loss: 0.5744 - val_accuracy: 0.7286\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5619 - accuracy: 0.7170 - val_loss: 0.5553 - val_accuracy: 0.7349\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5467 - accuracy: 0.7259 - val_loss: 0.5398 - val_accuracy: 0.7495\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5384 - accuracy: 0.7312 - val_loss: 0.5376 - val_accuracy: 0.7516\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5353 - accuracy: 0.7304 - val_loss: 0.5294 - val_accuracy: 0.7495\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5309 - accuracy: 0.7339 - val_loss: 0.5322 - val_accuracy: 0.7516\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.6867 - accuracy: 0.5830 - val_loss: 0.6817 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6643 - accuracy: 0.5554 - val_loss: 0.6627 - val_accuracy: 0.5303\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6441 - accuracy: 0.6313 - val_loss: 0.6361 - val_accuracy: 0.6827\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6187 - accuracy: 0.6982 - val_loss: 0.6103 - val_accuracy: 0.7119\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5924 - accuracy: 0.7188 - val_loss: 0.5848 - val_accuracy: 0.7328\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5675 - accuracy: 0.7286 - val_loss: 0.5621 - val_accuracy: 0.7328\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5497 - accuracy: 0.7277 - val_loss: 0.5467 - val_accuracy: 0.7390\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5393 - accuracy: 0.7268 - val_loss: 0.5551 - val_accuracy: 0.7223\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5326 - accuracy: 0.7321 - val_loss: 0.5280 - val_accuracy: 0.7641\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5304 - accuracy: 0.7304 - val_loss: 0.5248 - val_accuracy: 0.7620\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 15ms/step - loss: 0.6881 - accuracy: 0.5312 - val_loss: 0.6851 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6696 - accuracy: 0.5571 - val_loss: 0.6661 - val_accuracy: 0.5866\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6501 - accuracy: 0.6545 - val_loss: 0.6443 - val_accuracy: 0.6618\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6239 - accuracy: 0.7009 - val_loss: 0.6150 - val_accuracy: 0.6931\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5952 - accuracy: 0.7125 - val_loss: 0.5860 - val_accuracy: 0.7307\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5696 - accuracy: 0.7241 - val_loss: 0.5642 - val_accuracy: 0.7286\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5510 - accuracy: 0.7250 - val_loss: 0.5469 - val_accuracy: 0.7390\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5392 - accuracy: 0.7312 - val_loss: 0.5357 - val_accuracy: 0.7495\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5317 - accuracy: 0.7321 - val_loss: 0.5348 - val_accuracy: 0.7453\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5277 - accuracy: 0.7295 - val_loss: 0.5302 - val_accuracy: 0.7537\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.6839 - accuracy: 0.5500 - val_loss: 0.6793 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6570 - accuracy: 0.6071 - val_loss: 0.6463 - val_accuracy: 0.6639\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6283 - accuracy: 0.6911 - val_loss: 0.6133 - val_accuracy: 0.6973\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5966 - accuracy: 0.7098 - val_loss: 0.5821 - val_accuracy: 0.7223\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5656 - accuracy: 0.7259 - val_loss: 0.5559 - val_accuracy: 0.7411\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5489 - accuracy: 0.7304 - val_loss: 0.5437 - val_accuracy: 0.7411\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5371 - accuracy: 0.7384 - val_loss: 0.5357 - val_accuracy: 0.7370\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5321 - accuracy: 0.7321 - val_loss: 0.5332 - val_accuracy: 0.7432\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5296 - accuracy: 0.7366 - val_loss: 0.5316 - val_accuracy: 0.7537\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5269 - accuracy: 0.7312 - val_loss: 0.5234 - val_accuracy: 0.7578\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.6779 - accuracy: 0.5670 - val_loss: 0.6924 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6566 - accuracy: 0.6411 - val_loss: 0.6505 - val_accuracy: 0.6033\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6270 - accuracy: 0.6687 - val_loss: 0.6201 - val_accuracy: 0.6618\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5941 - accuracy: 0.7089 - val_loss: 0.5897 - val_accuracy: 0.6973\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5687 - accuracy: 0.7214 - val_loss: 0.5666 - val_accuracy: 0.7161\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5492 - accuracy: 0.7241 - val_loss: 0.5459 - val_accuracy: 0.7474\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5376 - accuracy: 0.7420 - val_loss: 0.5356 - val_accuracy: 0.7390\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5344 - accuracy: 0.7295 - val_loss: 0.5328 - val_accuracy: 0.7411\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5304 - accuracy: 0.7259 - val_loss: 0.5319 - val_accuracy: 0.7432\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5273 - accuracy: 0.7348 - val_loss: 0.5385 - val_accuracy: 0.7349\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.6911 - accuracy: 0.5509 - val_loss: 0.6903 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6709 - accuracy: 0.5554 - val_loss: 0.6675 - val_accuracy: 0.5846\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6502 - accuracy: 0.6518 - val_loss: 0.6457 - val_accuracy: 0.6576\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6243 - accuracy: 0.7036 - val_loss: 0.6198 - val_accuracy: 0.6868\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5978 - accuracy: 0.6991 - val_loss: 0.5937 - val_accuracy: 0.6994\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5723 - accuracy: 0.7045 - val_loss: 0.5683 - val_accuracy: 0.7223\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5543 - accuracy: 0.7286 - val_loss: 0.5543 - val_accuracy: 0.7265\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5413 - accuracy: 0.7196 - val_loss: 0.5442 - val_accuracy: 0.7349\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5344 - accuracy: 0.7277 - val_loss: 0.5388 - val_accuracy: 0.7432\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5291 - accuracy: 0.7348 - val_loss: 0.5277 - val_accuracy: 0.7516\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.7263 - accuracy: 0.5688 - val_loss: 0.6739 - val_accuracy: 0.6388\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6597 - accuracy: 0.6304 - val_loss: 0.6579 - val_accuracy: 0.5678\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6350 - accuracy: 0.6812 - val_loss: 0.6338 - val_accuracy: 0.6305\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6086 - accuracy: 0.7098 - val_loss: 0.6007 - val_accuracy: 0.7035\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5817 - accuracy: 0.7107 - val_loss: 0.5727 - val_accuracy: 0.7453\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5622 - accuracy: 0.7143 - val_loss: 0.5543 - val_accuracy: 0.7516\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5480 - accuracy: 0.7232 - val_loss: 0.5431 - val_accuracy: 0.7474\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5385 - accuracy: 0.7277 - val_loss: 0.5357 - val_accuracy: 0.7537\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5327 - accuracy: 0.7214 - val_loss: 0.5362 - val_accuracy: 0.7474\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5299 - accuracy: 0.7259 - val_loss: 0.5301 - val_accuracy: 0.7516\n",
      "Epoch 1/10\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "35/35 [==============================] - 1s 14ms/step - loss: 0.6753 - accuracy: 0.5741 - val_loss: 0.6759 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6380 - accuracy: 0.6509 - val_loss: 0.6239 - val_accuracy: 0.6827\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5975 - accuracy: 0.7098 - val_loss: 0.5833 - val_accuracy: 0.7182\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5646 - accuracy: 0.7196 - val_loss: 0.5524 - val_accuracy: 0.7474\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5474 - accuracy: 0.7179 - val_loss: 0.5403 - val_accuracy: 0.7432\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5353 - accuracy: 0.7295 - val_loss: 0.5395 - val_accuracy: 0.7453\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5293 - accuracy: 0.7286 - val_loss: 0.5357 - val_accuracy: 0.7495\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5257 - accuracy: 0.7348 - val_loss: 0.5296 - val_accuracy: 0.7537\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5230 - accuracy: 0.7286 - val_loss: 0.5384 - val_accuracy: 0.7411\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5231 - accuracy: 0.7420 - val_loss: 0.5210 - val_accuracy: 0.7599\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.6889 - accuracy: 0.5446 - val_loss: 0.6916 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6580 - accuracy: 0.5714 - val_loss: 0.6495 - val_accuracy: 0.6660\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6288 - accuracy: 0.7054 - val_loss: 0.6258 - val_accuracy: 0.6534\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5967 - accuracy: 0.7196 - val_loss: 0.5830 - val_accuracy: 0.7244\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5667 - accuracy: 0.7286 - val_loss: 0.5608 - val_accuracy: 0.7370\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5475 - accuracy: 0.7268 - val_loss: 0.5542 - val_accuracy: 0.7182\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5378 - accuracy: 0.7304 - val_loss: 0.5377 - val_accuracy: 0.7495\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5328 - accuracy: 0.7330 - val_loss: 0.5381 - val_accuracy: 0.7411\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5299 - accuracy: 0.7241 - val_loss: 0.5254 - val_accuracy: 0.7599\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5244 - accuracy: 0.7393 - val_loss: 0.5336 - val_accuracy: 0.7474\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.7017 - accuracy: 0.5509 - val_loss: 0.6816 - val_accuracy: 0.5240\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6676 - accuracy: 0.5661 - val_loss: 0.6651 - val_accuracy: 0.5699\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6455 - accuracy: 0.6348 - val_loss: 0.6416 - val_accuracy: 0.6681\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6221 - accuracy: 0.6768 - val_loss: 0.6104 - val_accuracy: 0.7286\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5951 - accuracy: 0.7196 - val_loss: 0.5925 - val_accuracy: 0.7056\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5705 - accuracy: 0.7179 - val_loss: 0.5667 - val_accuracy: 0.7370\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5535 - accuracy: 0.7277 - val_loss: 0.5528 - val_accuracy: 0.7390\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5427 - accuracy: 0.7188 - val_loss: 0.5441 - val_accuracy: 0.7495\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5363 - accuracy: 0.7304 - val_loss: 0.5337 - val_accuracy: 0.7578\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5324 - accuracy: 0.7250 - val_loss: 0.5354 - val_accuracy: 0.7474\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 13ms/step - loss: 0.7009 - accuracy: 0.5536 - val_loss: 0.6862 - val_accuracy: 0.5240\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6711 - accuracy: 0.5554 - val_loss: 0.6688 - val_accuracy: 0.5115\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6480 - accuracy: 0.6009 - val_loss: 0.6400 - val_accuracy: 0.6576\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6192 - accuracy: 0.7107 - val_loss: 0.6080 - val_accuracy: 0.7077\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5889 - accuracy: 0.7188 - val_loss: 0.5839 - val_accuracy: 0.7056\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5648 - accuracy: 0.7250 - val_loss: 0.5603 - val_accuracy: 0.7349\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5498 - accuracy: 0.7241 - val_loss: 0.5524 - val_accuracy: 0.7286\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5376 - accuracy: 0.7312 - val_loss: 0.5373 - val_accuracy: 0.7453\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5314 - accuracy: 0.7339 - val_loss: 0.5299 - val_accuracy: 0.7453\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5290 - accuracy: 0.7330 - val_loss: 0.5319 - val_accuracy: 0.7516\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 15ms/step - loss: 0.6979 - accuracy: 0.5393 - val_loss: 0.6940 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6652 - accuracy: 0.5679 - val_loss: 0.6645 - val_accuracy: 0.5470\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6431 - accuracy: 0.6580 - val_loss: 0.6390 - val_accuracy: 0.6576\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6187 - accuracy: 0.6964 - val_loss: 0.6096 - val_accuracy: 0.7035\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5925 - accuracy: 0.7054 - val_loss: 0.5832 - val_accuracy: 0.7119\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5716 - accuracy: 0.7259 - val_loss: 0.5712 - val_accuracy: 0.7056\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5545 - accuracy: 0.7259 - val_loss: 0.5482 - val_accuracy: 0.7432\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5450 - accuracy: 0.7304 - val_loss: 0.5403 - val_accuracy: 0.7411\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5380 - accuracy: 0.7384 - val_loss: 0.5311 - val_accuracy: 0.7495\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5342 - accuracy: 0.7250 - val_loss: 0.5451 - val_accuracy: 0.7286\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.7317 - accuracy: 0.4482 - val_loss: 0.6913 - val_accuracy: 0.5136\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 7ms/step - loss: 0.6859 - accuracy: 0.5446 - val_loss: 0.6898 - val_accuracy: 0.5010\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6762 - accuracy: 0.5527 - val_loss: 0.6836 - val_accuracy: 0.5073\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6695 - accuracy: 0.5741 - val_loss: 0.6759 - val_accuracy: 0.5407\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6618 - accuracy: 0.5616 - val_loss: 0.6707 - val_accuracy: 0.5282\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6533 - accuracy: 0.6170 - val_loss: 0.6586 - val_accuracy: 0.5804\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6444 - accuracy: 0.6009 - val_loss: 0.6512 - val_accuracy: 0.5908\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6334 - accuracy: 0.6741 - val_loss: 0.6386 - val_accuracy: 0.6367\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6223 - accuracy: 0.6830 - val_loss: 0.6272 - val_accuracy: 0.6597\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6106 - accuracy: 0.7188 - val_loss: 0.6151 - val_accuracy: 0.6994\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.6934 - accuracy: 0.5509 - val_loss: 0.6963 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6791 - accuracy: 0.5509 - val_loss: 0.6826 - val_accuracy: 0.4969\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6685 - accuracy: 0.5518 - val_loss: 0.6721 - val_accuracy: 0.5094\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6568 - accuracy: 0.5938 - val_loss: 0.6601 - val_accuracy: 0.5553\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6422 - accuracy: 0.6313 - val_loss: 0.6410 - val_accuracy: 0.6681\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6261 - accuracy: 0.7018 - val_loss: 0.6258 - val_accuracy: 0.6889\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6099 - accuracy: 0.7205 - val_loss: 0.6077 - val_accuracy: 0.7119\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5935 - accuracy: 0.7241 - val_loss: 0.5934 - val_accuracy: 0.7140\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5796 - accuracy: 0.7259 - val_loss: 0.5796 - val_accuracy: 0.7140\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5668 - accuracy: 0.7393 - val_loss: 0.5659 - val_accuracy: 0.7411\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.6970 - accuracy: 0.5161 - val_loss: 0.6765 - val_accuracy: 0.6180\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6656 - accuracy: 0.6054 - val_loss: 0.6714 - val_accuracy: 0.5637\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6549 - accuracy: 0.5955 - val_loss: 0.6590 - val_accuracy: 0.6033\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6426 - accuracy: 0.6571 - val_loss: 0.6471 - val_accuracy: 0.6200\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6290 - accuracy: 0.6866 - val_loss: 0.6310 - val_accuracy: 0.6639\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6156 - accuracy: 0.6982 - val_loss: 0.6159 - val_accuracy: 0.7056\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6023 - accuracy: 0.7223 - val_loss: 0.6012 - val_accuracy: 0.7119\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5884 - accuracy: 0.7223 - val_loss: 0.5911 - val_accuracy: 0.7182\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5767 - accuracy: 0.7250 - val_loss: 0.5782 - val_accuracy: 0.7286\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5664 - accuracy: 0.7339 - val_loss: 0.5683 - val_accuracy: 0.7349\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.6810 - accuracy: 0.5286 - val_loss: 0.6796 - val_accuracy: 0.4990\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6575 - accuracy: 0.6009 - val_loss: 0.6538 - val_accuracy: 0.6159\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6356 - accuracy: 0.6348 - val_loss: 0.6259 - val_accuracy: 0.6952\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6098 - accuracy: 0.7054 - val_loss: 0.6063 - val_accuracy: 0.6868\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5847 - accuracy: 0.7205 - val_loss: 0.5790 - val_accuracy: 0.7098\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5631 - accuracy: 0.7214 - val_loss: 0.5560 - val_accuracy: 0.7453\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5488 - accuracy: 0.7241 - val_loss: 0.5470 - val_accuracy: 0.7432\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5402 - accuracy: 0.7304 - val_loss: 0.5415 - val_accuracy: 0.7453\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5356 - accuracy: 0.7321 - val_loss: 0.5327 - val_accuracy: 0.7432\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5311 - accuracy: 0.7366 - val_loss: 0.5281 - val_accuracy: 0.7516\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 18ms/step - loss: 0.6826 - accuracy: 0.5554 - val_loss: 0.6741 - val_accuracy: 0.5616\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6570 - accuracy: 0.6393 - val_loss: 0.6579 - val_accuracy: 0.5532\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6327 - accuracy: 0.6286 - val_loss: 0.6231 - val_accuracy: 0.6806\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6028 - accuracy: 0.7125 - val_loss: 0.5931 - val_accuracy: 0.7015\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5763 - accuracy: 0.7143 - val_loss: 0.5640 - val_accuracy: 0.7474\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5562 - accuracy: 0.7214 - val_loss: 0.5586 - val_accuracy: 0.7244\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5440 - accuracy: 0.7321 - val_loss: 0.5424 - val_accuracy: 0.7411\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5359 - accuracy: 0.7205 - val_loss: 0.5390 - val_accuracy: 0.7495\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5316 - accuracy: 0.7366 - val_loss: 0.5294 - val_accuracy: 0.7453\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5278 - accuracy: 0.7250 - val_loss: 0.5302 - val_accuracy: 0.7516\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.6848 - accuracy: 0.5509 - val_loss: 0.6816 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6639 - accuracy: 0.5580 - val_loss: 0.6611 - val_accuracy: 0.5616\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6422 - accuracy: 0.6786 - val_loss: 0.6392 - val_accuracy: 0.6451\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 7ms/step - loss: 0.6166 - accuracy: 0.6902 - val_loss: 0.6053 - val_accuracy: 0.7307\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5926 - accuracy: 0.7134 - val_loss: 0.5779 - val_accuracy: 0.7432\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5663 - accuracy: 0.7286 - val_loss: 0.5675 - val_accuracy: 0.7223\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5515 - accuracy: 0.7259 - val_loss: 0.5478 - val_accuracy: 0.7474\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5403 - accuracy: 0.7259 - val_loss: 0.5478 - val_accuracy: 0.7474\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5357 - accuracy: 0.7339 - val_loss: 0.5326 - val_accuracy: 0.7453\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5300 - accuracy: 0.7321 - val_loss: 0.5295 - val_accuracy: 0.7453\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.6889 - accuracy: 0.5554 - val_loss: 0.6819 - val_accuracy: 0.5136\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6675 - accuracy: 0.5634 - val_loss: 0.6671 - val_accuracy: 0.5386\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6463 - accuracy: 0.6375 - val_loss: 0.6425 - val_accuracy: 0.6451\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6210 - accuracy: 0.6804 - val_loss: 0.6129 - val_accuracy: 0.7056\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5934 - accuracy: 0.7125 - val_loss: 0.5876 - val_accuracy: 0.7161\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5714 - accuracy: 0.7223 - val_loss: 0.5674 - val_accuracy: 0.7244\n",
      "Epoch 7/10\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5571 - accuracy: 0.7205 - val_loss: 0.5499 - val_accuracy: 0.7453\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5424 - accuracy: 0.7232 - val_loss: 0.5429 - val_accuracy: 0.7411\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5366 - accuracy: 0.7259 - val_loss: 0.5381 - val_accuracy: 0.7411\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5323 - accuracy: 0.7241 - val_loss: 0.5417 - val_accuracy: 0.7432\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.6878 - accuracy: 0.5429 - val_loss: 0.6943 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6635 - accuracy: 0.5902 - val_loss: 0.6597 - val_accuracy: 0.5929\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6380 - accuracy: 0.6643 - val_loss: 0.6304 - val_accuracy: 0.6827\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6118 - accuracy: 0.7036 - val_loss: 0.6010 - val_accuracy: 0.7203\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 8ms/step - loss: 0.5870 - accuracy: 0.7054 - val_loss: 0.5800 - val_accuracy: 0.7203\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5664 - accuracy: 0.7134 - val_loss: 0.5555 - val_accuracy: 0.7474\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5518 - accuracy: 0.7241 - val_loss: 0.5463 - val_accuracy: 0.7432\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5424 - accuracy: 0.7232 - val_loss: 0.5380 - val_accuracy: 0.7537\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5365 - accuracy: 0.7259 - val_loss: 0.5306 - val_accuracy: 0.7453\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5334 - accuracy: 0.7312 - val_loss: 0.5263 - val_accuracy: 0.7537\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 15ms/step - loss: 0.6757 - accuracy: 0.5777 - val_loss: 0.6712 - val_accuracy: 0.5136\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6493 - accuracy: 0.5982 - val_loss: 0.6479 - val_accuracy: 0.5720\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6205 - accuracy: 0.7107 - val_loss: 0.6118 - val_accuracy: 0.7056\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5941 - accuracy: 0.7152 - val_loss: 0.5841 - val_accuracy: 0.7286\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5704 - accuracy: 0.7277 - val_loss: 0.5686 - val_accuracy: 0.7161\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5525 - accuracy: 0.7304 - val_loss: 0.5510 - val_accuracy: 0.7453\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5410 - accuracy: 0.7348 - val_loss: 0.5385 - val_accuracy: 0.7557\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5354 - accuracy: 0.7277 - val_loss: 0.5371 - val_accuracy: 0.7474\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5306 - accuracy: 0.7357 - val_loss: 0.5324 - val_accuracy: 0.7495\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5272 - accuracy: 0.7339 - val_loss: 0.5268 - val_accuracy: 0.7578\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 13ms/step - loss: 0.7668 - accuracy: 0.4509 - val_loss: 0.6892 - val_accuracy: 0.5574\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6789 - accuracy: 0.5545 - val_loss: 0.6835 - val_accuracy: 0.4990\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6667 - accuracy: 0.5589 - val_loss: 0.6682 - val_accuracy: 0.5428\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6526 - accuracy: 0.6375 - val_loss: 0.6510 - val_accuracy: 0.6326\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6374 - accuracy: 0.6732 - val_loss: 0.6319 - val_accuracy: 0.6827\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6193 - accuracy: 0.7036 - val_loss: 0.6125 - val_accuracy: 0.7015\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6000 - accuracy: 0.7143 - val_loss: 0.5929 - val_accuracy: 0.7098\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5819 - accuracy: 0.7179 - val_loss: 0.5754 - val_accuracy: 0.7140\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5670 - accuracy: 0.7196 - val_loss: 0.5574 - val_accuracy: 0.7370\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5561 - accuracy: 0.7312 - val_loss: 0.5527 - val_accuracy: 0.7307\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.6860 - accuracy: 0.5545 - val_loss: 0.6810 - val_accuracy: 0.5136\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6629 - accuracy: 0.5875 - val_loss: 0.6669 - val_accuracy: 0.5115\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6398 - accuracy: 0.6455 - val_loss: 0.6314 - val_accuracy: 0.7015\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6112 - accuracy: 0.7080 - val_loss: 0.6030 - val_accuracy: 0.7015\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5834 - accuracy: 0.7179 - val_loss: 0.5712 - val_accuracy: 0.7411\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5615 - accuracy: 0.7232 - val_loss: 0.5563 - val_accuracy: 0.7370\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5460 - accuracy: 0.7312 - val_loss: 0.5419 - val_accuracy: 0.7516\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5369 - accuracy: 0.7304 - val_loss: 0.5368 - val_accuracy: 0.7495\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5318 - accuracy: 0.7330 - val_loss: 0.5307 - val_accuracy: 0.7453\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5286 - accuracy: 0.7286 - val_loss: 0.5250 - val_accuracy: 0.7516\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 13ms/step - loss: 0.6837 - accuracy: 0.5321 - val_loss: 0.6794 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6592 - accuracy: 0.5643 - val_loss: 0.6583 - val_accuracy: 0.5532\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6336 - accuracy: 0.6830 - val_loss: 0.6293 - val_accuracy: 0.6660\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6036 - accuracy: 0.7143 - val_loss: 0.5907 - val_accuracy: 0.7328\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5768 - accuracy: 0.7268 - val_loss: 0.5673 - val_accuracy: 0.7307\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5559 - accuracy: 0.7312 - val_loss: 0.5492 - val_accuracy: 0.7453\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5453 - accuracy: 0.7241 - val_loss: 0.5459 - val_accuracy: 0.7286\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5358 - accuracy: 0.7277 - val_loss: 0.5307 - val_accuracy: 0.7453\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5313 - accuracy: 0.7330 - val_loss: 0.5351 - val_accuracy: 0.7453\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5279 - accuracy: 0.7348 - val_loss: 0.5241 - val_accuracy: 0.7557\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 13ms/step - loss: 0.6702 - accuracy: 0.5741 - val_loss: 0.6637 - val_accuracy: 0.5219\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6438 - accuracy: 0.6536 - val_loss: 0.6431 - val_accuracy: 0.5804\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6156 - accuracy: 0.7027 - val_loss: 0.6067 - val_accuracy: 0.7035\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5874 - accuracy: 0.7152 - val_loss: 0.5757 - val_accuracy: 0.7370\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5645 - accuracy: 0.7196 - val_loss: 0.5568 - val_accuracy: 0.7411\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5479 - accuracy: 0.7286 - val_loss: 0.5444 - val_accuracy: 0.7390\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5385 - accuracy: 0.7286 - val_loss: 0.5343 - val_accuracy: 0.7453\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5333 - accuracy: 0.7339 - val_loss: 0.5304 - val_accuracy: 0.7474\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5297 - accuracy: 0.7366 - val_loss: 0.5263 - val_accuracy: 0.7516\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5262 - accuracy: 0.7348 - val_loss: 0.5259 - val_accuracy: 0.7557\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 13ms/step - loss: 0.6864 - accuracy: 0.5250 - val_loss: 0.6822 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6617 - accuracy: 0.6062 - val_loss: 0.6586 - val_accuracy: 0.5783\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6410 - accuracy: 0.6080 - val_loss: 0.6362 - val_accuracy: 0.6576\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6173 - accuracy: 0.7063 - val_loss: 0.6116 - val_accuracy: 0.6952\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5917 - accuracy: 0.7080 - val_loss: 0.5859 - val_accuracy: 0.7035\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5683 - accuracy: 0.7286 - val_loss: 0.5621 - val_accuracy: 0.7411\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5523 - accuracy: 0.7286 - val_loss: 0.5461 - val_accuracy: 0.7495\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5423 - accuracy: 0.7304 - val_loss: 0.5455 - val_accuracy: 0.7453\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5364 - accuracy: 0.7304 - val_loss: 0.5377 - val_accuracy: 0.7474\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5319 - accuracy: 0.7295 - val_loss: 0.5290 - val_accuracy: 0.7557\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 13ms/step - loss: 0.6788 - accuracy: 0.5491 - val_loss: 0.6802 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6600 - accuracy: 0.5688 - val_loss: 0.6601 - val_accuracy: 0.5344\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6358 - accuracy: 0.6384 - val_loss: 0.6279 - val_accuracy: 0.7077\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6088 - accuracy: 0.7089 - val_loss: 0.6073 - val_accuracy: 0.6889\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5835 - accuracy: 0.7107 - val_loss: 0.5790 - val_accuracy: 0.7098\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5605 - accuracy: 0.7250 - val_loss: 0.5532 - val_accuracy: 0.7390\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5461 - accuracy: 0.7304 - val_loss: 0.5534 - val_accuracy: 0.7307\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5387 - accuracy: 0.7339 - val_loss: 0.5364 - val_accuracy: 0.7453\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5336 - accuracy: 0.7312 - val_loss: 0.5342 - val_accuracy: 0.7474\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5296 - accuracy: 0.7241 - val_loss: 0.5266 - val_accuracy: 0.7474\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 20ms/step - loss: 0.6760 - accuracy: 0.6107 - val_loss: 0.6564 - val_accuracy: 0.6555\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 7ms/step - loss: 0.6382 - accuracy: 0.6357 - val_loss: 0.6319 - val_accuracy: 0.6722\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6119 - accuracy: 0.7080 - val_loss: 0.6122 - val_accuracy: 0.6743\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5873 - accuracy: 0.7045 - val_loss: 0.5757 - val_accuracy: 0.7349\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5654 - accuracy: 0.7196 - val_loss: 0.5589 - val_accuracy: 0.7411\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5497 - accuracy: 0.7268 - val_loss: 0.5569 - val_accuracy: 0.7244\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5400 - accuracy: 0.7312 - val_loss: 0.5376 - val_accuracy: 0.7432\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5332 - accuracy: 0.7250 - val_loss: 0.5343 - val_accuracy: 0.7453\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5308 - accuracy: 0.7286 - val_loss: 0.5324 - val_accuracy: 0.7516\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5269 - accuracy: 0.7384 - val_loss: 0.5258 - val_accuracy: 0.7557\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 15ms/step - loss: 0.7976 - accuracy: 0.5509 - val_loss: 0.6981 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6743 - accuracy: 0.5795 - val_loss: 0.6701 - val_accuracy: 0.5282\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6538 - accuracy: 0.6009 - val_loss: 0.6516 - val_accuracy: 0.6180\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6344 - accuracy: 0.6786 - val_loss: 0.6315 - val_accuracy: 0.6597\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6126 - accuracy: 0.6955 - val_loss: 0.6057 - val_accuracy: 0.7161\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5911 - accuracy: 0.7170 - val_loss: 0.5864 - val_accuracy: 0.7203\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5728 - accuracy: 0.7170 - val_loss: 0.5713 - val_accuracy: 0.7244\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5577 - accuracy: 0.7268 - val_loss: 0.5551 - val_accuracy: 0.7495\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5462 - accuracy: 0.7223 - val_loss: 0.5477 - val_accuracy: 0.7495\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5386 - accuracy: 0.7259 - val_loss: 0.5439 - val_accuracy: 0.7432\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.6918 - accuracy: 0.5527 - val_loss: 0.6819 - val_accuracy: 0.5177\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6647 - accuracy: 0.5714 - val_loss: 0.6683 - val_accuracy: 0.5177\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6425 - accuracy: 0.6152 - val_loss: 0.6345 - val_accuracy: 0.6868\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6155 - accuracy: 0.6964 - val_loss: 0.6092 - val_accuracy: 0.6994\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5875 - accuracy: 0.7116 - val_loss: 0.5788 - val_accuracy: 0.7223\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5651 - accuracy: 0.7214 - val_loss: 0.5565 - val_accuracy: 0.7411\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5498 - accuracy: 0.7205 - val_loss: 0.5481 - val_accuracy: 0.7370\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5396 - accuracy: 0.7330 - val_loss: 0.5388 - val_accuracy: 0.7453\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5339 - accuracy: 0.7250 - val_loss: 0.5306 - val_accuracy: 0.7516\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5310 - accuracy: 0.7312 - val_loss: 0.5320 - val_accuracy: 0.7557\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.6783 - accuracy: 0.5571 - val_loss: 0.6702 - val_accuracy: 0.5678\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6516 - accuracy: 0.6295 - val_loss: 0.6464 - val_accuracy: 0.6430\n",
      "Epoch 3/10\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6251 - accuracy: 0.6830 - val_loss: 0.6149 - val_accuracy: 0.7035\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5967 - accuracy: 0.7312 - val_loss: 0.5870 - val_accuracy: 0.7286\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5725 - accuracy: 0.7205 - val_loss: 0.5596 - val_accuracy: 0.7516\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5549 - accuracy: 0.7304 - val_loss: 0.5475 - val_accuracy: 0.7453\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5428 - accuracy: 0.7259 - val_loss: 0.5395 - val_accuracy: 0.7474\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5354 - accuracy: 0.7312 - val_loss: 0.5371 - val_accuracy: 0.7537\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5314 - accuracy: 0.7339 - val_loss: 0.5256 - val_accuracy: 0.7641\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5290 - accuracy: 0.7312 - val_loss: 0.5323 - val_accuracy: 0.7578\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 15ms/step - loss: 0.7180 - accuracy: 0.4839 - val_loss: 0.6888 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6691 - accuracy: 0.5652 - val_loss: 0.6692 - val_accuracy: 0.5282\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6523 - accuracy: 0.5839 - val_loss: 0.6468 - val_accuracy: 0.6681\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6302 - accuracy: 0.7107 - val_loss: 0.6249 - val_accuracy: 0.6994\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6073 - accuracy: 0.7107 - val_loss: 0.6064 - val_accuracy: 0.6931\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5833 - accuracy: 0.7188 - val_loss: 0.5730 - val_accuracy: 0.7390\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5639 - accuracy: 0.7268 - val_loss: 0.5611 - val_accuracy: 0.7390\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5501 - accuracy: 0.7259 - val_loss: 0.5456 - val_accuracy: 0.7432\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5397 - accuracy: 0.7366 - val_loss: 0.5408 - val_accuracy: 0.7453\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5345 - accuracy: 0.7304 - val_loss: 0.5388 - val_accuracy: 0.7390\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 13ms/step - loss: 0.6844 - accuracy: 0.5518 - val_loss: 0.6803 - val_accuracy: 0.5094\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6614 - accuracy: 0.5964 - val_loss: 0.6566 - val_accuracy: 0.6242\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6376 - accuracy: 0.6482 - val_loss: 0.6315 - val_accuracy: 0.6785\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6095 - accuracy: 0.7161 - val_loss: 0.6007 - val_accuracy: 0.7098\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5830 - accuracy: 0.7232 - val_loss: 0.5800 - val_accuracy: 0.7077\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5623 - accuracy: 0.7286 - val_loss: 0.5577 - val_accuracy: 0.7328\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5467 - accuracy: 0.7188 - val_loss: 0.5523 - val_accuracy: 0.7349\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5394 - accuracy: 0.7232 - val_loss: 0.5447 - val_accuracy: 0.7390\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5321 - accuracy: 0.7330 - val_loss: 0.5298 - val_accuracy: 0.7578\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5311 - accuracy: 0.7312 - val_loss: 0.5260 - val_accuracy: 0.7641\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.6807 - accuracy: 0.5536 - val_loss: 0.6799 - val_accuracy: 0.5157\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 7ms/step - loss: 0.6637 - accuracy: 0.5625 - val_loss: 0.6617 - val_accuracy: 0.6033\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6440 - accuracy: 0.6330 - val_loss: 0.6344 - val_accuracy: 0.7140\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6177 - accuracy: 0.7000 - val_loss: 0.6121 - val_accuracy: 0.6952\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5900 - accuracy: 0.7196 - val_loss: 0.5846 - val_accuracy: 0.7140\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5681 - accuracy: 0.7268 - val_loss: 0.5651 - val_accuracy: 0.7223\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5516 - accuracy: 0.7304 - val_loss: 0.5485 - val_accuracy: 0.7432\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5411 - accuracy: 0.7304 - val_loss: 0.5417 - val_accuracy: 0.7495\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5373 - accuracy: 0.7295 - val_loss: 0.5300 - val_accuracy: 0.7599\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5296 - accuracy: 0.7375 - val_loss: 0.5353 - val_accuracy: 0.7495\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 14ms/step - loss: 0.6781 - accuracy: 0.5670 - val_loss: 0.6733 - val_accuracy: 0.5136\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6533 - accuracy: 0.6134 - val_loss: 0.6468 - val_accuracy: 0.6326\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6240 - accuracy: 0.6893 - val_loss: 0.6191 - val_accuracy: 0.6764\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5949 - accuracy: 0.7170 - val_loss: 0.5848 - val_accuracy: 0.7432\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5717 - accuracy: 0.7223 - val_loss: 0.5652 - val_accuracy: 0.7390\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5532 - accuracy: 0.7330 - val_loss: 0.5507 - val_accuracy: 0.7411\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5435 - accuracy: 0.7321 - val_loss: 0.5429 - val_accuracy: 0.7432\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5354 - accuracy: 0.7339 - val_loss: 0.5337 - val_accuracy: 0.7453\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5306 - accuracy: 0.7339 - val_loss: 0.5290 - val_accuracy: 0.7474\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5280 - accuracy: 0.7330 - val_loss: 0.5266 - val_accuracy: 0.7537\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 16ms/step - loss: 0.6827 - accuracy: 0.5804 - val_loss: 0.6758 - val_accuracy: 0.5407\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6598 - accuracy: 0.5589 - val_loss: 0.6582 - val_accuracy: 0.5699\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6378 - accuracy: 0.6857 - val_loss: 0.6299 - val_accuracy: 0.6806\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6109 - accuracy: 0.7179 - val_loss: 0.6060 - val_accuracy: 0.6952\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5859 - accuracy: 0.7214 - val_loss: 0.5773 - val_accuracy: 0.7286\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5641 - accuracy: 0.7250 - val_loss: 0.5630 - val_accuracy: 0.7307\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5490 - accuracy: 0.7277 - val_loss: 0.5416 - val_accuracy: 0.7495\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5380 - accuracy: 0.7402 - val_loss: 0.5429 - val_accuracy: 0.7390\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5334 - accuracy: 0.7312 - val_loss: 0.5277 - val_accuracy: 0.7557\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5284 - accuracy: 0.7348 - val_loss: 0.5368 - val_accuracy: 0.7411\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 15ms/step - loss: 0.6849 - accuracy: 0.5598 - val_loss: 0.6808 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6589 - accuracy: 0.5750 - val_loss: 0.6510 - val_accuracy: 0.6597\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6331 - accuracy: 0.6741 - val_loss: 0.6216 - val_accuracy: 0.7015\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6037 - accuracy: 0.7196 - val_loss: 0.5962 - val_accuracy: 0.7098\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5777 - accuracy: 0.7179 - val_loss: 0.5690 - val_accuracy: 0.7328\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5563 - accuracy: 0.7268 - val_loss: 0.5555 - val_accuracy: 0.7349\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5437 - accuracy: 0.7357 - val_loss: 0.5362 - val_accuracy: 0.7411\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5367 - accuracy: 0.7366 - val_loss: 0.5332 - val_accuracy: 0.7432\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5314 - accuracy: 0.7357 - val_loss: 0.5273 - val_accuracy: 0.7474\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5308 - accuracy: 0.7259 - val_loss: 0.5303 - val_accuracy: 0.7537\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 16ms/step - loss: 0.6752 - accuracy: 0.5821 - val_loss: 0.6758 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6521 - accuracy: 0.6196 - val_loss: 0.6411 - val_accuracy: 0.6743\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6225 - accuracy: 0.6929 - val_loss: 0.6129 - val_accuracy: 0.6952\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5945 - accuracy: 0.7179 - val_loss: 0.5855 - val_accuracy: 0.7182\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5701 - accuracy: 0.7214 - val_loss: 0.5625 - val_accuracy: 0.7432\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5535 - accuracy: 0.7232 - val_loss: 0.5503 - val_accuracy: 0.7390\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5411 - accuracy: 0.7286 - val_loss: 0.5410 - val_accuracy: 0.7453\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5362 - accuracy: 0.7277 - val_loss: 0.5362 - val_accuracy: 0.7516\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5314 - accuracy: 0.7295 - val_loss: 0.5355 - val_accuracy: 0.7474\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5280 - accuracy: 0.7348 - val_loss: 0.5289 - val_accuracy: 0.7516\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 17ms/step - loss: 0.6944 - accuracy: 0.5509 - val_loss: 0.6859 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 7ms/step - loss: 0.6671 - accuracy: 0.5607 - val_loss: 0.6610 - val_accuracy: 0.5929\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6434 - accuracy: 0.6973 - val_loss: 0.6389 - val_accuracy: 0.6534\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6176 - accuracy: 0.6946 - val_loss: 0.6061 - val_accuracy: 0.7286\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5911 - accuracy: 0.7179 - val_loss: 0.5935 - val_accuracy: 0.6889\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5702 - accuracy: 0.7054 - val_loss: 0.5626 - val_accuracy: 0.7390\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5534 - accuracy: 0.7214 - val_loss: 0.5473 - val_accuracy: 0.7453\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5420 - accuracy: 0.7286 - val_loss: 0.5438 - val_accuracy: 0.7411\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5359 - accuracy: 0.7286 - val_loss: 0.5327 - val_accuracy: 0.7411\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5302 - accuracy: 0.7339 - val_loss: 0.5370 - val_accuracy: 0.7537\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 17ms/step - loss: 0.6775 - accuracy: 0.5509 - val_loss: 0.6737 - val_accuracy: 0.4990\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6544 - accuracy: 0.5679 - val_loss: 0.6472 - val_accuracy: 0.6409\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6258 - accuracy: 0.7089 - val_loss: 0.6145 - val_accuracy: 0.6931\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5961 - accuracy: 0.7063 - val_loss: 0.5823 - val_accuracy: 0.7370\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5692 - accuracy: 0.7223 - val_loss: 0.5608 - val_accuracy: 0.7370\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5517 - accuracy: 0.7268 - val_loss: 0.5456 - val_accuracy: 0.7432\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5400 - accuracy: 0.7277 - val_loss: 0.5390 - val_accuracy: 0.7453\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5336 - accuracy: 0.7321 - val_loss: 0.5332 - val_accuracy: 0.7495\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5295 - accuracy: 0.7366 - val_loss: 0.5316 - val_accuracy: 0.7557\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5284 - accuracy: 0.7339 - val_loss: 0.5241 - val_accuracy: 0.7557\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 17ms/step - loss: 0.6791 - accuracy: 0.5509 - val_loss: 0.6782 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6594 - accuracy: 0.5911 - val_loss: 0.6619 - val_accuracy: 0.5219\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6371 - accuracy: 0.6009 - val_loss: 0.6308 - val_accuracy: 0.6889\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6116 - accuracy: 0.7116 - val_loss: 0.6057 - val_accuracy: 0.7035\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5860 - accuracy: 0.7250 - val_loss: 0.5813 - val_accuracy: 0.7140\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5657 - accuracy: 0.7152 - val_loss: 0.5691 - val_accuracy: 0.7140\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5497 - accuracy: 0.7357 - val_loss: 0.5463 - val_accuracy: 0.7495\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5410 - accuracy: 0.7268 - val_loss: 0.5386 - val_accuracy: 0.7453\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5360 - accuracy: 0.7330 - val_loss: 0.5376 - val_accuracy: 0.7557\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5311 - accuracy: 0.7312 - val_loss: 0.5317 - val_accuracy: 0.7453\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 16ms/step - loss: 0.6745 - accuracy: 0.5536 - val_loss: 0.6736 - val_accuracy: 0.4990\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6504 - accuracy: 0.6161 - val_loss: 0.6427 - val_accuracy: 0.6534\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6230 - accuracy: 0.6973 - val_loss: 0.6101 - val_accuracy: 0.7056\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5922 - accuracy: 0.7161 - val_loss: 0.5782 - val_accuracy: 0.7370\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5677 - accuracy: 0.7143 - val_loss: 0.5598 - val_accuracy: 0.7370\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5522 - accuracy: 0.7295 - val_loss: 0.5405 - val_accuracy: 0.7578\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5387 - accuracy: 0.7286 - val_loss: 0.5360 - val_accuracy: 0.7474\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5345 - accuracy: 0.7321 - val_loss: 0.5258 - val_accuracy: 0.7599\n",
      "Epoch 9/10\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5296 - accuracy: 0.7277 - val_loss: 0.5297 - val_accuracy: 0.7537\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5264 - accuracy: 0.7393 - val_loss: 0.5242 - val_accuracy: 0.7557\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 18ms/step - loss: 0.6863 - accuracy: 0.5223 - val_loss: 0.6772 - val_accuracy: 0.5219\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6601 - accuracy: 0.6143 - val_loss: 0.6609 - val_accuracy: 0.5449\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6371 - accuracy: 0.6420 - val_loss: 0.6276 - val_accuracy: 0.7119\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6130 - accuracy: 0.7045 - val_loss: 0.6031 - val_accuracy: 0.7119\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5874 - accuracy: 0.7205 - val_loss: 0.5808 - val_accuracy: 0.7161\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 7ms/step - loss: 0.5663 - accuracy: 0.7223 - val_loss: 0.5602 - val_accuracy: 0.7307\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5512 - accuracy: 0.7304 - val_loss: 0.5448 - val_accuracy: 0.7474\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5407 - accuracy: 0.7286 - val_loss: 0.5422 - val_accuracy: 0.7474\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5356 - accuracy: 0.7286 - val_loss: 0.5346 - val_accuracy: 0.7474\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5307 - accuracy: 0.7357 - val_loss: 0.5251 - val_accuracy: 0.7537\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 17ms/step - loss: 0.6845 - accuracy: 0.5509 - val_loss: 0.6847 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6626 - accuracy: 0.5536 - val_loss: 0.6624 - val_accuracy: 0.5553\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6407 - accuracy: 0.6714 - val_loss: 0.6325 - val_accuracy: 0.6910\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6128 - accuracy: 0.6982 - val_loss: 0.6054 - val_accuracy: 0.6973\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5857 - accuracy: 0.7063 - val_loss: 0.5843 - val_accuracy: 0.6994\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5638 - accuracy: 0.7205 - val_loss: 0.5590 - val_accuracy: 0.7432\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5487 - accuracy: 0.7196 - val_loss: 0.5468 - val_accuracy: 0.7453\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5393 - accuracy: 0.7312 - val_loss: 0.5408 - val_accuracy: 0.7432\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5359 - accuracy: 0.7188 - val_loss: 0.5476 - val_accuracy: 0.7307\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5314 - accuracy: 0.7304 - val_loss: 0.5296 - val_accuracy: 0.7537\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 19ms/step - loss: 0.6840 - accuracy: 0.5482 - val_loss: 0.6843 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6623 - accuracy: 0.6268 - val_loss: 0.6576 - val_accuracy: 0.6180\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6387 - accuracy: 0.6429 - val_loss: 0.6326 - val_accuracy: 0.6681\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6111 - accuracy: 0.7089 - val_loss: 0.6028 - val_accuracy: 0.7077\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5836 - accuracy: 0.7161 - val_loss: 0.5737 - val_accuracy: 0.7411\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5627 - accuracy: 0.7223 - val_loss: 0.5573 - val_accuracy: 0.7390\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5480 - accuracy: 0.7286 - val_loss: 0.5463 - val_accuracy: 0.7390\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5384 - accuracy: 0.7348 - val_loss: 0.5349 - val_accuracy: 0.7453\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5326 - accuracy: 0.7268 - val_loss: 0.5337 - val_accuracy: 0.7495\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5283 - accuracy: 0.7312 - val_loss: 0.5273 - val_accuracy: 0.7495\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 18ms/step - loss: 0.6808 - accuracy: 0.5384 - val_loss: 0.6874 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6627 - accuracy: 0.5830 - val_loss: 0.6548 - val_accuracy: 0.6409\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6369 - accuracy: 0.6527 - val_loss: 0.6304 - val_accuracy: 0.6764\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6108 - accuracy: 0.7125 - val_loss: 0.6165 - val_accuracy: 0.6555\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5849 - accuracy: 0.7089 - val_loss: 0.5754 - val_accuracy: 0.7328\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5632 - accuracy: 0.7295 - val_loss: 0.5569 - val_accuracy: 0.7390\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5479 - accuracy: 0.7286 - val_loss: 0.5448 - val_accuracy: 0.7474\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5386 - accuracy: 0.7223 - val_loss: 0.5447 - val_accuracy: 0.7265\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5334 - accuracy: 0.7366 - val_loss: 0.5363 - val_accuracy: 0.7516\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5301 - accuracy: 0.7348 - val_loss: 0.5291 - val_accuracy: 0.7537\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 18ms/step - loss: 0.6842 - accuracy: 0.5518 - val_loss: 0.6811 - val_accuracy: 0.5031\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6587 - accuracy: 0.6071 - val_loss: 0.6504 - val_accuracy: 0.6910\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6337 - accuracy: 0.7027 - val_loss: 0.6248 - val_accuracy: 0.6806\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6082 - accuracy: 0.6848 - val_loss: 0.5919 - val_accuracy: 0.7432\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5787 - accuracy: 0.7188 - val_loss: 0.5760 - val_accuracy: 0.7161\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5591 - accuracy: 0.7277 - val_loss: 0.5523 - val_accuracy: 0.7474\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5469 - accuracy: 0.7179 - val_loss: 0.5473 - val_accuracy: 0.7411\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5404 - accuracy: 0.7286 - val_loss: 0.5342 - val_accuracy: 0.7516\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5321 - accuracy: 0.7321 - val_loss: 0.5367 - val_accuracy: 0.7474\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5292 - accuracy: 0.7312 - val_loss: 0.5251 - val_accuracy: 0.7578\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 18ms/step - loss: 0.6905 - accuracy: 0.5214 - val_loss: 0.6824 - val_accuracy: 0.4990\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6602 - accuracy: 0.6080 - val_loss: 0.6486 - val_accuracy: 0.6827\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6323 - accuracy: 0.6723 - val_loss: 0.6220 - val_accuracy: 0.6764\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 7ms/step - loss: 0.6045 - accuracy: 0.7080 - val_loss: 0.6003 - val_accuracy: 0.6785\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5791 - accuracy: 0.7196 - val_loss: 0.5671 - val_accuracy: 0.7411\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5603 - accuracy: 0.7179 - val_loss: 0.5505 - val_accuracy: 0.7474\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5483 - accuracy: 0.7250 - val_loss: 0.5382 - val_accuracy: 0.7495\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5369 - accuracy: 0.7339 - val_loss: 0.5346 - val_accuracy: 0.7453\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5323 - accuracy: 0.7268 - val_loss: 0.5386 - val_accuracy: 0.7390\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5298 - accuracy: 0.7321 - val_loss: 0.5332 - val_accuracy: 0.7432\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 22ms/step - loss: 0.6732 - accuracy: 0.5982 - val_loss: 0.6668 - val_accuracy: 0.5971\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 7ms/step - loss: 0.6495 - accuracy: 0.6179 - val_loss: 0.6495 - val_accuracy: 0.6013\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6245 - accuracy: 0.6911 - val_loss: 0.6177 - val_accuracy: 0.6848\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5979 - accuracy: 0.7161 - val_loss: 0.5944 - val_accuracy: 0.6910\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5730 - accuracy: 0.7232 - val_loss: 0.5681 - val_accuracy: 0.7307\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5544 - accuracy: 0.7214 - val_loss: 0.5483 - val_accuracy: 0.7516\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5429 - accuracy: 0.7232 - val_loss: 0.5482 - val_accuracy: 0.7411\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5354 - accuracy: 0.7339 - val_loss: 0.5379 - val_accuracy: 0.7557\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5309 - accuracy: 0.7330 - val_loss: 0.5334 - val_accuracy: 0.7495\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5290 - accuracy: 0.7277 - val_loss: 0.5349 - val_accuracy: 0.7557\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 18ms/step - loss: 0.7219 - accuracy: 0.5161 - val_loss: 0.6832 - val_accuracy: 0.4990\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6619 - accuracy: 0.5688 - val_loss: 0.6620 - val_accuracy: 0.5887\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6405 - accuracy: 0.6768 - val_loss: 0.6368 - val_accuracy: 0.6639\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6181 - accuracy: 0.6973 - val_loss: 0.6123 - val_accuracy: 0.6973\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5948 - accuracy: 0.7098 - val_loss: 0.5904 - val_accuracy: 0.7119\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5736 - accuracy: 0.7214 - val_loss: 0.5674 - val_accuracy: 0.7370\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5589 - accuracy: 0.7205 - val_loss: 0.5489 - val_accuracy: 0.7474\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5459 - accuracy: 0.7268 - val_loss: 0.5523 - val_accuracy: 0.7182\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5398 - accuracy: 0.7339 - val_loss: 0.5428 - val_accuracy: 0.7328\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5344 - accuracy: 0.7304 - val_loss: 0.5310 - val_accuracy: 0.7432\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 18ms/step - loss: 0.6837 - accuracy: 0.5634 - val_loss: 0.6719 - val_accuracy: 0.5365\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6515 - accuracy: 0.5938 - val_loss: 0.6432 - val_accuracy: 0.6660\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6240 - accuracy: 0.7143 - val_loss: 0.6162 - val_accuracy: 0.7098\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5963 - accuracy: 0.7223 - val_loss: 0.5940 - val_accuracy: 0.7056\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 8ms/step - loss: 0.5723 - accuracy: 0.7277 - val_loss: 0.5646 - val_accuracy: 0.7432\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5568 - accuracy: 0.7205 - val_loss: 0.5511 - val_accuracy: 0.7370\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5436 - accuracy: 0.7295 - val_loss: 0.5391 - val_accuracy: 0.7453\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5354 - accuracy: 0.7312 - val_loss: 0.5422 - val_accuracy: 0.7474\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5320 - accuracy: 0.7304 - val_loss: 0.5382 - val_accuracy: 0.7474\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5290 - accuracy: 0.7357 - val_loss: 0.5326 - val_accuracy: 0.7557\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 18ms/step - loss: 0.6783 - accuracy: 0.5446 - val_loss: 0.6824 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6607 - accuracy: 0.5759 - val_loss: 0.6593 - val_accuracy: 0.5658\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6362 - accuracy: 0.6795 - val_loss: 0.6300 - val_accuracy: 0.6848\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6089 - accuracy: 0.7161 - val_loss: 0.6013 - val_accuracy: 0.7035\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5828 - accuracy: 0.7250 - val_loss: 0.5794 - val_accuracy: 0.7077\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5610 - accuracy: 0.7223 - val_loss: 0.5575 - val_accuracy: 0.7370\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5468 - accuracy: 0.7268 - val_loss: 0.5442 - val_accuracy: 0.7495\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5371 - accuracy: 0.7304 - val_loss: 0.5366 - val_accuracy: 0.7453\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5317 - accuracy: 0.7366 - val_loss: 0.5302 - val_accuracy: 0.7495\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5322 - accuracy: 0.7339 - val_loss: 0.5228 - val_accuracy: 0.7599\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 18ms/step - loss: 0.6816 - accuracy: 0.5509 - val_loss: 0.6819 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 7ms/step - loss: 0.6578 - accuracy: 0.6313 - val_loss: 0.6600 - val_accuracy: 0.5282\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 7ms/step - loss: 0.6275 - accuracy: 0.6527 - val_loss: 0.6140 - val_accuracy: 0.7203\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 7ms/step - loss: 0.5971 - accuracy: 0.7188 - val_loss: 0.5911 - val_accuracy: 0.6952\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5706 - accuracy: 0.7179 - val_loss: 0.5578 - val_accuracy: 0.7390\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5525 - accuracy: 0.7223 - val_loss: 0.5515 - val_accuracy: 0.7328\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5412 - accuracy: 0.7277 - val_loss: 0.5470 - val_accuracy: 0.7411\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5367 - accuracy: 0.7268 - val_loss: 0.5417 - val_accuracy: 0.7474\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5311 - accuracy: 0.7312 - val_loss: 0.5295 - val_accuracy: 0.7474\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5272 - accuracy: 0.7321 - val_loss: 0.5289 - val_accuracy: 0.7495\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 23ms/step - loss: 0.6752 - accuracy: 0.5813 - val_loss: 0.6663 - val_accuracy: 0.6013\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6489 - accuracy: 0.6420 - val_loss: 0.6472 - val_accuracy: 0.5950\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 7ms/step - loss: 0.6228 - accuracy: 0.6804 - val_loss: 0.6106 - val_accuracy: 0.7077\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5945 - accuracy: 0.7214 - val_loss: 0.5902 - val_accuracy: 0.6952\n",
      "Epoch 5/10\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5721 - accuracy: 0.7223 - val_loss: 0.5637 - val_accuracy: 0.7349\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5551 - accuracy: 0.7214 - val_loss: 0.5524 - val_accuracy: 0.7286\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5427 - accuracy: 0.7295 - val_loss: 0.5406 - val_accuracy: 0.7474\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5359 - accuracy: 0.7375 - val_loss: 0.5365 - val_accuracy: 0.7516\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5311 - accuracy: 0.7330 - val_loss: 0.5235 - val_accuracy: 0.7620\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 7ms/step - loss: 0.5277 - accuracy: 0.7348 - val_loss: 0.5333 - val_accuracy: 0.7495\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 19ms/step - loss: 0.6852 - accuracy: 0.5509 - val_loss: 0.6835 - val_accuracy: 0.4990\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 7ms/step - loss: 0.6634 - accuracy: 0.5696 - val_loss: 0.6633 - val_accuracy: 0.5282\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6378 - accuracy: 0.6348 - val_loss: 0.6268 - val_accuracy: 0.7035\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6108 - accuracy: 0.7036 - val_loss: 0.6017 - val_accuracy: 0.7056\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5821 - accuracy: 0.7143 - val_loss: 0.5752 - val_accuracy: 0.7223\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5609 - accuracy: 0.7304 - val_loss: 0.5570 - val_accuracy: 0.7265\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5463 - accuracy: 0.7295 - val_loss: 0.5397 - val_accuracy: 0.7432\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5387 - accuracy: 0.7348 - val_loss: 0.5379 - val_accuracy: 0.7495\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5326 - accuracy: 0.7304 - val_loss: 0.5282 - val_accuracy: 0.7516\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5288 - accuracy: 0.7321 - val_loss: 0.5272 - val_accuracy: 0.7557\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 19ms/step - loss: 0.6740 - accuracy: 0.5598 - val_loss: 0.6706 - val_accuracy: 0.5094\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6506 - accuracy: 0.6330 - val_loss: 0.6455 - val_accuracy: 0.6096\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6234 - accuracy: 0.6723 - val_loss: 0.6114 - val_accuracy: 0.7203\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5962 - accuracy: 0.7152 - val_loss: 0.5882 - val_accuracy: 0.7056\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5727 - accuracy: 0.7188 - val_loss: 0.5713 - val_accuracy: 0.7056\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5544 - accuracy: 0.7286 - val_loss: 0.5452 - val_accuracy: 0.7432\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5426 - accuracy: 0.7330 - val_loss: 0.5401 - val_accuracy: 0.7370\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5374 - accuracy: 0.7295 - val_loss: 0.5303 - val_accuracy: 0.7516\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5302 - accuracy: 0.7375 - val_loss: 0.5332 - val_accuracy: 0.7495\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5280 - accuracy: 0.7321 - val_loss: 0.5276 - val_accuracy: 0.7516\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 19ms/step - loss: 0.6823 - accuracy: 0.5411 - val_loss: 0.6786 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6574 - accuracy: 0.5857 - val_loss: 0.6517 - val_accuracy: 0.6242\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6317 - accuracy: 0.6759 - val_loss: 0.6233 - val_accuracy: 0.7015\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6034 - accuracy: 0.7071 - val_loss: 0.5976 - val_accuracy: 0.7119\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5791 - accuracy: 0.7179 - val_loss: 0.5758 - val_accuracy: 0.7203\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5579 - accuracy: 0.7268 - val_loss: 0.5537 - val_accuracy: 0.7432\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5453 - accuracy: 0.7277 - val_loss: 0.5411 - val_accuracy: 0.7474\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5364 - accuracy: 0.7375 - val_loss: 0.5335 - val_accuracy: 0.7474\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5321 - accuracy: 0.7312 - val_loss: 0.5340 - val_accuracy: 0.7495\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5291 - accuracy: 0.7339 - val_loss: 0.5290 - val_accuracy: 0.7537\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 19ms/step - loss: 0.6807 - accuracy: 0.5509 - val_loss: 0.6824 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6536 - accuracy: 0.6438 - val_loss: 0.6507 - val_accuracy: 0.5846\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6262 - accuracy: 0.6777 - val_loss: 0.6180 - val_accuracy: 0.6660\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5979 - accuracy: 0.7054 - val_loss: 0.5885 - val_accuracy: 0.7015\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5720 - accuracy: 0.7286 - val_loss: 0.5628 - val_accuracy: 0.7349\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5540 - accuracy: 0.7321 - val_loss: 0.5523 - val_accuracy: 0.7286\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5437 - accuracy: 0.7304 - val_loss: 0.5367 - val_accuracy: 0.7411\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5355 - accuracy: 0.7321 - val_loss: 0.5421 - val_accuracy: 0.7286\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5301 - accuracy: 0.7402 - val_loss: 0.5251 - val_accuracy: 0.7516\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5292 - accuracy: 0.7384 - val_loss: 0.5268 - val_accuracy: 0.7537\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 19ms/step - loss: 0.6763 - accuracy: 0.5580 - val_loss: 0.6679 - val_accuracy: 0.5699\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6474 - accuracy: 0.6286 - val_loss: 0.6369 - val_accuracy: 0.6952\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6188 - accuracy: 0.6955 - val_loss: 0.6086 - val_accuracy: 0.7035\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5918 - accuracy: 0.7071 - val_loss: 0.5832 - val_accuracy: 0.7182\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5664 - accuracy: 0.7188 - val_loss: 0.5604 - val_accuracy: 0.7307\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5502 - accuracy: 0.7286 - val_loss: 0.5452 - val_accuracy: 0.7474\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5399 - accuracy: 0.7321 - val_loss: 0.5383 - val_accuracy: 0.7474\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5341 - accuracy: 0.7286 - val_loss: 0.5347 - val_accuracy: 0.7495\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5302 - accuracy: 0.7393 - val_loss: 0.5258 - val_accuracy: 0.7474\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5267 - accuracy: 0.7286 - val_loss: 0.5304 - val_accuracy: 0.7537\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 19ms/step - loss: 0.6720 - accuracy: 0.5509 - val_loss: 0.6684 - val_accuracy: 0.5177\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6461 - accuracy: 0.6741 - val_loss: 0.6390 - val_accuracy: 0.6534\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6178 - accuracy: 0.6804 - val_loss: 0.6094 - val_accuracy: 0.6931\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5904 - accuracy: 0.7125 - val_loss: 0.5894 - val_accuracy: 0.6931\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5686 - accuracy: 0.7134 - val_loss: 0.5614 - val_accuracy: 0.7307\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5519 - accuracy: 0.7286 - val_loss: 0.5499 - val_accuracy: 0.7411\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5422 - accuracy: 0.7241 - val_loss: 0.5461 - val_accuracy: 0.7328\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5360 - accuracy: 0.7312 - val_loss: 0.5389 - val_accuracy: 0.7495\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5308 - accuracy: 0.7312 - val_loss: 0.5261 - val_accuracy: 0.7557\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5286 - accuracy: 0.7321 - val_loss: 0.5271 - val_accuracy: 0.7537\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 18ms/step - loss: 0.6768 - accuracy: 0.5714 - val_loss: 0.6625 - val_accuracy: 0.6722\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6437 - accuracy: 0.6598 - val_loss: 0.6433 - val_accuracy: 0.5950\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6133 - accuracy: 0.6884 - val_loss: 0.5989 - val_accuracy: 0.7286\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5843 - accuracy: 0.7214 - val_loss: 0.5743 - val_accuracy: 0.7307\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5624 - accuracy: 0.7241 - val_loss: 0.5576 - val_accuracy: 0.7286\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5472 - accuracy: 0.7339 - val_loss: 0.5449 - val_accuracy: 0.7453\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5375 - accuracy: 0.7339 - val_loss: 0.5327 - val_accuracy: 0.7432\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5320 - accuracy: 0.7286 - val_loss: 0.5328 - val_accuracy: 0.7474\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5285 - accuracy: 0.7357 - val_loss: 0.5266 - val_accuracy: 0.7495\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5258 - accuracy: 0.7312 - val_loss: 0.5257 - val_accuracy: 0.7557\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 17ms/step - loss: 0.7144 - accuracy: 0.5143 - val_loss: 0.6985 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6738 - accuracy: 0.5509 - val_loss: 0.6759 - val_accuracy: 0.5010\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6541 - accuracy: 0.5884 - val_loss: 0.6515 - val_accuracy: 0.6180\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6335 - accuracy: 0.6884 - val_loss: 0.6228 - val_accuracy: 0.7035\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6084 - accuracy: 0.7080 - val_loss: 0.5967 - val_accuracy: 0.7286\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5837 - accuracy: 0.7196 - val_loss: 0.5749 - val_accuracy: 0.7286\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5631 - accuracy: 0.7268 - val_loss: 0.5554 - val_accuracy: 0.7453\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5498 - accuracy: 0.7304 - val_loss: 0.5432 - val_accuracy: 0.7453\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5420 - accuracy: 0.7214 - val_loss: 0.5446 - val_accuracy: 0.7411\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5338 - accuracy: 0.7339 - val_loss: 0.5307 - val_accuracy: 0.7453\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 17ms/step - loss: 0.6813 - accuracy: 0.5741 - val_loss: 0.6710 - val_accuracy: 0.6576\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 8ms/step - loss: 0.6569 - accuracy: 0.6268 - val_loss: 0.6479 - val_accuracy: 0.6681\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6302 - accuracy: 0.6929 - val_loss: 0.6282 - val_accuracy: 0.6597\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6054 - accuracy: 0.7000 - val_loss: 0.5955 - val_accuracy: 0.7098\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5785 - accuracy: 0.7214 - val_loss: 0.5704 - val_accuracy: 0.7307\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5590 - accuracy: 0.7223 - val_loss: 0.5560 - val_accuracy: 0.7307\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5467 - accuracy: 0.7214 - val_loss: 0.5415 - val_accuracy: 0.7495\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5374 - accuracy: 0.7321 - val_loss: 0.5385 - val_accuracy: 0.7495\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5327 - accuracy: 0.7223 - val_loss: 0.5434 - val_accuracy: 0.7349\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5320 - accuracy: 0.7312 - val_loss: 0.5307 - val_accuracy: 0.7537\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 19ms/step - loss: 0.6911 - accuracy: 0.5509 - val_loss: 0.6876 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6667 - accuracy: 0.5786 - val_loss: 0.6604 - val_accuracy: 0.6305\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6409 - accuracy: 0.6304 - val_loss: 0.6372 - val_accuracy: 0.6639\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6140 - accuracy: 0.7027 - val_loss: 0.6071 - val_accuracy: 0.6910\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5868 - accuracy: 0.7152 - val_loss: 0.5816 - val_accuracy: 0.7098\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5642 - accuracy: 0.7188 - val_loss: 0.5631 - val_accuracy: 0.7286\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5487 - accuracy: 0.7268 - val_loss: 0.5474 - val_accuracy: 0.7432\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5397 - accuracy: 0.7277 - val_loss: 0.5422 - val_accuracy: 0.7495\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5343 - accuracy: 0.7295 - val_loss: 0.5341 - val_accuracy: 0.7453\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5310 - accuracy: 0.7259 - val_loss: 0.5299 - val_accuracy: 0.7474\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 19ms/step - loss: 0.6841 - accuracy: 0.5589 - val_loss: 0.6771 - val_accuracy: 0.5929\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6635 - accuracy: 0.6286 - val_loss: 0.6663 - val_accuracy: 0.5219\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6418 - accuracy: 0.6321 - val_loss: 0.6317 - val_accuracy: 0.6910\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6145 - accuracy: 0.6964 - val_loss: 0.6125 - val_accuracy: 0.6806\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5877 - accuracy: 0.7143 - val_loss: 0.5760 - val_accuracy: 0.7328\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5649 - accuracy: 0.7196 - val_loss: 0.5617 - val_accuracy: 0.7161\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5500 - accuracy: 0.7188 - val_loss: 0.5462 - val_accuracy: 0.7453\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5405 - accuracy: 0.7304 - val_loss: 0.5380 - val_accuracy: 0.7495\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 7ms/step - loss: 0.5347 - accuracy: 0.7259 - val_loss: 0.5379 - val_accuracy: 0.7390\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5300 - accuracy: 0.7393 - val_loss: 0.5293 - val_accuracy: 0.7474\n",
      "Epoch 1/10\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "35/35 [==============================] - 1s 19ms/step - loss: 0.6746 - accuracy: 0.5848 - val_loss: 0.6841 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6536 - accuracy: 0.6277 - val_loss: 0.6432 - val_accuracy: 0.6639\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6228 - accuracy: 0.6875 - val_loss: 0.6186 - val_accuracy: 0.6681\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5933 - accuracy: 0.7161 - val_loss: 0.5840 - val_accuracy: 0.7307\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5682 - accuracy: 0.7286 - val_loss: 0.5647 - val_accuracy: 0.7390\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5515 - accuracy: 0.7277 - val_loss: 0.5485 - val_accuracy: 0.7474\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5406 - accuracy: 0.7321 - val_loss: 0.5408 - val_accuracy: 0.7495\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5336 - accuracy: 0.7286 - val_loss: 0.5340 - val_accuracy: 0.7557\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5300 - accuracy: 0.7375 - val_loss: 0.5320 - val_accuracy: 0.7516\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5279 - accuracy: 0.7357 - val_loss: 0.5244 - val_accuracy: 0.7578\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 18ms/step - loss: 0.7311 - accuracy: 0.5000 - val_loss: 0.6877 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6674 - accuracy: 0.5518 - val_loss: 0.6701 - val_accuracy: 0.5115\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6497 - accuracy: 0.6518 - val_loss: 0.6464 - val_accuracy: 0.6451\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6295 - accuracy: 0.6705 - val_loss: 0.6250 - val_accuracy: 0.6827\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6075 - accuracy: 0.7018 - val_loss: 0.6042 - val_accuracy: 0.6973\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5860 - accuracy: 0.7152 - val_loss: 0.5777 - val_accuracy: 0.7244\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5675 - accuracy: 0.7250 - val_loss: 0.5597 - val_accuracy: 0.7349\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5546 - accuracy: 0.7250 - val_loss: 0.5494 - val_accuracy: 0.7370\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5442 - accuracy: 0.7250 - val_loss: 0.5447 - val_accuracy: 0.7370\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5376 - accuracy: 0.7339 - val_loss: 0.5358 - val_accuracy: 0.7557\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 18ms/step - loss: 0.6912 - accuracy: 0.5357 - val_loss: 0.6935 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6684 - accuracy: 0.6036 - val_loss: 0.6668 - val_accuracy: 0.5198\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6434 - accuracy: 0.6062 - val_loss: 0.6348 - val_accuracy: 0.7056\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6172 - accuracy: 0.6991 - val_loss: 0.6078 - val_accuracy: 0.6973\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5911 - accuracy: 0.7134 - val_loss: 0.5907 - val_accuracy: 0.6973\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5659 - accuracy: 0.7259 - val_loss: 0.5592 - val_accuracy: 0.7411\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5516 - accuracy: 0.7268 - val_loss: 0.5545 - val_accuracy: 0.7203\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5427 - accuracy: 0.7259 - val_loss: 0.5399 - val_accuracy: 0.7474\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5354 - accuracy: 0.7375 - val_loss: 0.5317 - val_accuracy: 0.7411\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5318 - accuracy: 0.7348 - val_loss: 0.5331 - val_accuracy: 0.7516\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 18ms/step - loss: 0.6753 - accuracy: 0.5536 - val_loss: 0.6712 - val_accuracy: 0.5491\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6518 - accuracy: 0.6116 - val_loss: 0.6501 - val_accuracy: 0.5971\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6237 - accuracy: 0.6812 - val_loss: 0.6176 - val_accuracy: 0.6910\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5949 - accuracy: 0.7080 - val_loss: 0.5864 - val_accuracy: 0.7223\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5697 - accuracy: 0.7161 - val_loss: 0.5704 - val_accuracy: 0.7098\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5525 - accuracy: 0.7357 - val_loss: 0.5487 - val_accuracy: 0.7349\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5421 - accuracy: 0.7295 - val_loss: 0.5442 - val_accuracy: 0.7432\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5351 - accuracy: 0.7339 - val_loss: 0.5407 - val_accuracy: 0.7474\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5328 - accuracy: 0.7321 - val_loss: 0.5456 - val_accuracy: 0.7349\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5279 - accuracy: 0.7437 - val_loss: 0.5292 - val_accuracy: 0.7495\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 19ms/step - loss: 0.6715 - accuracy: 0.5679 - val_loss: 0.6687 - val_accuracy: 0.5574\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6454 - accuracy: 0.6187 - val_loss: 0.6421 - val_accuracy: 0.6180\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6179 - accuracy: 0.6938 - val_loss: 0.6065 - val_accuracy: 0.7286\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5908 - accuracy: 0.7188 - val_loss: 0.5797 - val_accuracy: 0.7265\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5685 - accuracy: 0.7196 - val_loss: 0.5609 - val_accuracy: 0.7349\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5506 - accuracy: 0.7268 - val_loss: 0.5557 - val_accuracy: 0.7307\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5403 - accuracy: 0.7286 - val_loss: 0.5378 - val_accuracy: 0.7432\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5347 - accuracy: 0.7277 - val_loss: 0.5313 - val_accuracy: 0.7516\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5308 - accuracy: 0.7357 - val_loss: 0.5292 - val_accuracy: 0.7495\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 7ms/step - loss: 0.5272 - accuracy: 0.7321 - val_loss: 0.5304 - val_accuracy: 0.7537\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 18ms/step - loss: 0.6750 - accuracy: 0.5491 - val_loss: 0.6787 - val_accuracy: 0.4969\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6518 - accuracy: 0.6348 - val_loss: 0.6488 - val_accuracy: 0.6200\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6257 - accuracy: 0.6866 - val_loss: 0.6193 - val_accuracy: 0.6889\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5979 - accuracy: 0.7214 - val_loss: 0.5925 - val_accuracy: 0.7098\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5727 - accuracy: 0.7277 - val_loss: 0.5727 - val_accuracy: 0.7098\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5542 - accuracy: 0.7312 - val_loss: 0.5535 - val_accuracy: 0.7370\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5429 - accuracy: 0.7295 - val_loss: 0.5400 - val_accuracy: 0.7495\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5360 - accuracy: 0.7295 - val_loss: 0.5329 - val_accuracy: 0.7495\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5344 - accuracy: 0.7286 - val_loss: 0.5296 - val_accuracy: 0.7537\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5281 - accuracy: 0.7339 - val_loss: 0.5265 - val_accuracy: 0.7557\n",
      "Epoch 1/10\n",
      "35/35 [==============================] - 1s 20ms/step - loss: 0.6806 - accuracy: 0.5437 - val_loss: 0.6796 - val_accuracy: 0.5010\n",
      "Epoch 2/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6593 - accuracy: 0.6268 - val_loss: 0.6682 - val_accuracy: 0.5073\n",
      "Epoch 3/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.6345 - accuracy: 0.6482 - val_loss: 0.6255 - val_accuracy: 0.6973\n",
      "Epoch 4/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.6036 - accuracy: 0.7027 - val_loss: 0.5940 - val_accuracy: 0.7223\n",
      "Epoch 5/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5774 - accuracy: 0.7223 - val_loss: 0.5713 - val_accuracy: 0.7223\n",
      "Epoch 6/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5588 - accuracy: 0.7277 - val_loss: 0.5515 - val_accuracy: 0.7390\n",
      "Epoch 7/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5446 - accuracy: 0.7312 - val_loss: 0.5492 - val_accuracy: 0.7370\n",
      "Epoch 8/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5379 - accuracy: 0.7321 - val_loss: 0.5357 - val_accuracy: 0.7432\n",
      "Epoch 9/10\n",
      "35/35 [==============================] - 0s 6ms/step - loss: 0.5314 - accuracy: 0.7339 - val_loss: 0.5366 - val_accuracy: 0.7495\n",
      "Epoch 10/10\n",
      "35/35 [==============================] - 0s 5ms/step - loss: 0.5282 - accuracy: 0.7295 - val_loss: 0.5301 - val_accuracy: 0.7537\n"
     ]
    }
   ],
   "source": [
    "# Written using SciPy differential_evolution documentation\n",
    "# Fitness function and bounds are self defined\n",
    "# Max_Iter for maximum number of generations\n",
    "# TOL for convergence tolerance\n",
    "# Mutation explained below\n",
    "# Recombination explained below\n",
    "result = differential_evolution(fitness_func, \n",
    "                                bounds, \n",
    "                                maxiter=10, \n",
    "                                tol=0.01,\n",
    "                                mutation=(0.5, 1),\n",
    "                                recombination=.7)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eb82ae2d",
   "metadata": {},
   "source": [
    "# TOL, Selection, Mutation, and Crossover\n",
    "\n",
    "### https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.differential_evolution.html#scipy.optimize.differential_evolution\n",
    "\n",
    "TOL value required some research on my end. From my understanding, TOL is convergence tolerance; if the change resulting from a singular generation is smaller than the tolerance value (TOL value as parameter), then the next generations will be terminated.\n",
    "\n",
    "The default population initialization is Latin Hypercube. This generates n points in [0, 1) to the power of d, where d is the dimension of of the parameter space.\n",
    "\n",
    "The mutation type used in this algorithm is called dithering. Essentially, the mutation rate/constant is randomly changed each generation. The constant chosen is taken randomly from the values inbetween U(min, max). This parameter has increased my computation and run time significantly. The default mutation strategy is best/1, which mutates the best vectorized offspring by adding a scaled difference between itself and another randomly selected vector.\n",
    "\n",
    "The recombination parameter is equivalent to crossover probability. The higher/closer the value is to 1, the more mutants there will be in the next generation."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "de9a3780",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimal hyperparameters for input and hidden layer(s): [61.84 24.84]\n",
      "Success:  True\n",
      "Message:  Optimization terminated successfully.\n",
      "Number of iterations:  1\n"
     ]
    }
   ],
   "source": [
    "# Written using SciPy differential_evolution documentation\n",
    "print('Optimal hyperparameters for input and hidden layer(s):', result.x) # result.x returns array of the solution/optimized hyperparameters\n",
    "print('Success: ', result.success) # BOOL value returning if the optimization was a success or not\n",
    "print('Message: ', result.message) # Success or failure message\n",
    "print('Number of iterations: ', result.nit)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "eb749935",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "35/35 [==============================] - 0s 2ms/step\n",
      "15/15 [==============================] - 0s 4ms/step\n"
     ]
    }
   ],
   "source": [
    "# Type difference issue that I was able to solve using the link below:\n",
    "# Taken from https://stackoverflow.com/questions/68836551/keras-attributeerror-sequential-object-has-no-attribute-predict-classes\n",
    "\n",
    "training_predictions = (nn_model.predict(X_train) > 0.5).astype(\"int32\")\n",
    "testing_predictions = (nn_model.predict(X_test) > 0.5).astype(\"int32\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "7211f501",
   "metadata": {},
   "outputs": [],
   "source": [
    "confusion_matrix_test = confusion_matrix(Y_test, testing_predictions)\n",
    "confusion_matrix_train = confusion_matrix(Y_train, training_predictions) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "9f9ac921",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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iIqi8QJRXV1dpKWlFWq/d++exu9KJyIiqggKtHSUVRpXNor7KhWlUgl9ff03DoiIiKi8KXjFyzArArWTje+//x4AIJPJ8OOPP8LExEQ8l5+fj4MHD3LNBhERERWidrIREhIC4GllY8WKFSpTJvr6+qhWrRpWrFih/QiJiIjKOC4QVdP169cBAG3atMG2bdtgYWEhWVBERETlSVleb6ENGq/ZOHDggBRxEBERUTml8W6UXr16Yf78+YXav/32W/Tu3VsrQREREZUnBTLtHGWVxslGXFwcOnfuXKi9Y8eOOHjwoFaCIiIiKk8KINPKUVZpnGxkZmYWucVVLpfj4cOHWgmKiIiIyg+Nkw0XFxds3ry5UHtkZCTq1aunlaCIiIjKE0FLR1ml8QLRadOm4eOPP8a1a9fQtm1bAMD+/fsRERGBX375ResBEhERlXVleb2FNmicbHTt2hXbt2/HvHnz8Ouvv8LQ0BANGjTAvn374OnpKUWMREREZRq3vpZA586di1wkmpCQgEaNGr1pTERERFSOaLxm42UZGRlYvnw5mjRpAjc3N23EREREVK5U9DUbJU42YmJi0L9/f9jb2yM0NBSdOnXCqVOntBkbERFRuVDR37Oh0TRKcnIywsPDsXbtWmRlZcHPzw+5ubnYunUrd6IQERFRkdSubHTq1An16tXDxYsXERoailu3biE0NFTK2IiIiMqFAi0dZZXalY29e/fiiy++wMiRI1GrVi0pYyIiIipXynKioA1qVzYOHTqER48eoWnTpmjWrBmWLVuGO3fuSBkbERERlQNqJxvu7u5YvXo1UlJSMHz4cERGRqJy5cooKChAdHQ0Hj16JGWcREREZZYg085RVmm8G8XIyAiDBw/G4cOHce7cOQQFBWH+/PmwsbFB165dpYiRiIioTKvoazbe6D0bderUwcKFC5GcnIyIiAhtxURERETlSIneIPoyXV1ddO/eHd27d9fGcEREROVKWa5KaINWkg0iIiIqXll++6c2MNkgIiKSWFl++6c2vPF3oxARERG9CisbREREEuOaDSIiIpJURU82OI1CREREkmJlg4iISGLcjUJERESS4m4UIiIiIgmxskFERCSxir5AlMkGERGRxCr6mg1OoxAREZGkWNkgIiKSWEEFr20w2SAiIpJYRV+zwWkUIiIiiQlaOjQRHByMDz74AKamprCx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\n",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Visualize monfusion matrices using seaborn like other assignments\n",
    "import seaborn as sns\n",
    "\n",
    "# Test data\n",
    "sns.heatmap(confusion_matrix_test, annot=True)\n",
    "plt.title('Confusion Matrix Test Data')\n",
    "plt.ylabel('Actual Values')\n",
    "plt.xlabel('Predicted Values')\n",
    "plt.show()\n",
    "\n",
    "# Train data\n",
    "sns.heatmap(confusion_matrix_train, annot=True)\n",
    "plt.title('Confusion Matrix Train Data')\n",
    "plt.ylabel('Actual Values')\n",
    "plt.xlabel('Predicted Values')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e9d11c95",
   "metadata": {},
   "source": [
    "Same implementation of my confusion matrix for every other assignments. I used the confusion_matrix type from sk-learn to visualize the predictions of my neural network after optimization through my differential evolution algorithm."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "987c4fdd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "15/15 [==============================] - 0s 7ms/step - loss: 0.5301 - accuracy: 0.7537\n",
      "Test accuracy: 0.7536534667015076\n"
     ]
    }
   ],
   "source": [
    "test_loss, test_accuracy = nn_model.evaluate(X_test, Y_test)\n",
    "print('Test accuracy:', test_accuracy)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "05d25db5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "35/35 [==============================] - 0s 3ms/step - loss: 0.5258 - accuracy: 0.7339\n",
      "Train accuracy: 0.7339285612106323\n"
     ]
    }
   ],
   "source": [
    "train_loss, train_accuracy = nn_model.evaluate(X_train, Y_train)\n",
    "print('Train accuracy:', train_accuracy)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "ec403ccd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Generations')"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot accuracy data\n",
    "\n",
    "plt.plot(train_accuracy_scores)\n",
    "plt.plot(test_accuracy_scores)\n",
    "plt.title('Average Accuracy')\n",
    "plt.legend(['training', 'testing'], loc='lower right')\n",
    "plt.ylabel('Accuracy')\n",
    "plt.xlabel('Generations')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "49f75855",
   "metadata": {},
   "source": [
    "# Summary Report\n",
    "\n",
    "Implementing a differential evolution algorithm felt very similar to my implementation of an evolutionary strategy. Mutation operators are used in both, preparing the data was exactly the same, and my accuracy/fitness score increased after each generation. The DE (this algorithm) converged quicker than both the evolutionary strategy and genetic algorithm I implemented in previous homeworks as well. This is due to the fact that a DE undergoes a fairly simple arithmetic operation and has a high recombination constant/crossover probability. The runtimes I experienced for this algorithm to converge were between 2-6 minutes.\n",
    "\n",
    "Accuracy score over the training dataset increases to  an average of 73.3% in just 10 generations, while the average accuracy score over our test dataset reaches and impressive 75.4%. These values could be even further increased by increasing the number of epochs/generations as well. These improvements can be seen in the confusion matrices above. In the test dataset, there were only 50 incorrect classifications where our algorithm predicted \"0\" incorrectly and 68 incorrect classifications where \"1\" was predicted incorrectly. The coloring shows high correlation where the predicted values match the actual, and low where they don't. These confusion matrix results visually corroborates an improved model over our other assignments. \n",
    "\n",
    "The accuracy vs generation graph visualization for this DE shows a sporadic curve for both testing and training data. The average accuracy for both testing and training data are higher than those of any other algorithm we've implemented in previous assignments. Our test data ended up outperforming our training data, but not by too much. The average accuracy scores are within 2% of one another.\n",
    "\n",
    "It outperforms the evolutionary strategy using the same number of generations and similar hyperparameter values where I could. It also outperforms our evolutionary strategy, adaptive mutation rate, our standard feed-forward neural network with backpropagation, and our genetic algorithm, making it the most effective algorithm yet with this dataset. I hypothesize that my genetic algorithm implementation would evetually outperform this DE, but given 10 generations and the efficiency of a DE, I am not surprised by it's effective optimzation in this problem. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2f96bec1",
   "metadata": {},
   "source": [
    "# References"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7f07ff7c",
   "metadata": {},
   "source": [
    "https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.differential_evolution.html#scipy.optimize.differential_evolution\n",
    "\n",
    "https://keras.io/api/layers/core_layers/dense/\n",
    "\n",
    "https://stackoverflow.com/questions/32302654/scipy-differential-evolution\n",
    "\n",
    "https://machinelearningmastery.com/differential-evolution-global-optimization-with-python/\n",
    "\n",
    "https://stackoverflow.com/questions/68836551/keras-attributeerror-sequential-object-has-no-attribute-predict-classes\n",
    "\n",
    "https://www.sciencedirect.com/topics/engineering/convergence-tolerance#:~:text=In%20our%20example%20a%20%E2%80%9Cconvergence,tolerances%2C%20the%20iterations%20are%20terminated.\n",
    "\n",
    "https://machinelearningmastery.com/differential-evolution-from-scratch-in-python/\n",
    "\n",
    "https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.qmc.LatinHypercube.html#scipy.stats.qmc.LatinHypercube"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4bb6ab5a",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.10 (tensorflow)",
   "language": "python",
   "name": "tensorflow"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
